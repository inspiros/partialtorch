- func: partialtorch::masked_pair(Tensor data, Tensor? mask=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::masked_pair.bool(Tensor data, bool? mask) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::masked_pair.tuple(Tensor[1] args) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::masked_pair.identity(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_and.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_and.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_and.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_and.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_and.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_and.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_and.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_and.Scalar_Tensor(Scalar self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_and_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_and_.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_and_.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_and_.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_and_.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_and_.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_and_.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_and_.Scalar_Tensor(Scalar self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_or.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_or.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_or.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_or.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_or.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_or.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_or.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_or.Scalar_Tensor(Scalar self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_or_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_or_.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_or_.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_or_.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_or_.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_or_.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_or_.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_or_.Scalar_Tensor(Scalar self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_xor.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_xor.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_xor.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_xor.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_xor.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_xor.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_xor.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_xor.Scalar_Tensor(Scalar self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_xor_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_xor_.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_xor_.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_xor_.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_xor_.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_xor_.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_xor_.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_xor_.Scalar_Tensor(Scalar self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_left_shift.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_left_shift.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_left_shift.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_left_shift.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_left_shift.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_left_shift.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_left_shift.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_left_shift.Scalar_Tensor(Scalar self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_left_shift_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_left_shift_.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_left_shift_.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_left_shift_.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_left_shift_.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_left_shift_.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_left_shift_.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_left_shift_.Scalar_Tensor(Scalar self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_right_shift.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_right_shift.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_right_shift.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_right_shift.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_right_shift.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_right_shift.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_right_shift.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_right_shift.Scalar_Tensor(Scalar self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_right_shift_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_right_shift_.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_right_shift_.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_right_shift_.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_right_shift_.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_right_shift_.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_right_shift_.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_right_shift_.Scalar_Tensor(Scalar self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::__and__.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::__and__.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::__and__.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::__and__.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::__and__.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::__and__.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::__iand__.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::__iand__.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::__iand__.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::__iand__.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::__iand__.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::__iand__.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::__or__.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::__or__.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::__or__.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::__or__.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::__or__.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::__or__.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::__ior__.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::__ior__.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::__ior__.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::__ior__.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::__ior__.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::__ior__.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::__xor__.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::__xor__.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::__xor__.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::__xor__.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::__xor__.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::__xor__.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::__ixor__.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::__ixor__.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::__ixor__.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::__ixor__.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::__ixor__.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::__ixor__.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::__lshift__.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::__lshift__.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::__lshift__.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::__lshift__.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::__lshift__.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::__lshift__.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::__ilshift__.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::__ilshift__.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::__ilshift__.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::__ilshift__.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::__ilshift__.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::__ilshift__.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::__rshift__.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::__rshift__.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::__rshift__.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::__rshift__.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::__rshift__.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::__rshift__.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::__irshift__.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::__irshift__.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::__irshift__.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::__irshift__.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::__irshift__.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::__irshift__.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::add.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::add.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::add.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::add.Tensor(Tensor self, Tensor other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::add.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::add.Tensor_Scalar(Tensor self, Scalar other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::add.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::add.Scalar_Tensor(Scalar self, Tensor other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::add_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::add_.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::add_.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::add_.Tensor(Tensor self, Tensor other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::add_.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::add_.Tensor_Scalar(Tensor self, Scalar other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::add_.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::add_.Scalar_Tensor(Scalar self, Tensor other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::sub.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::sub.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::sub.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::sub.Tensor(Tensor self, Tensor other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::sub.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::sub.Tensor_Scalar(Tensor self, Scalar other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::sub.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::sub.Scalar_Tensor(Scalar self, Tensor other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::sub_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::sub_.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::sub_.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::sub_.Tensor(Tensor self, Tensor other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::sub_.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::sub_.Tensor_Scalar(Tensor self, Scalar other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::sub_.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::sub_.Scalar_Tensor(Scalar self, Tensor other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::subtract.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::subtract.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::subtract.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::subtract.Tensor(Tensor self, Tensor other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::subtract.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::subtract.Tensor_Scalar(Tensor self, Scalar other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::subtract.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::subtract.Scalar_Tensor(Scalar self, Tensor other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::subtract_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::subtract_.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::subtract_.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::subtract_.Tensor(Tensor self, Tensor other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::subtract_.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::subtract_.Tensor_Scalar(Tensor self, Scalar other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::subtract_.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::subtract_.Scalar_Tensor(Scalar self, Tensor other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::mul.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::mul.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::mul.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::mul.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::mul.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::mul.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::mul.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::mul.Scalar_Tensor(Scalar self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::mul_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::mul_.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::mul_.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::mul_.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::mul_.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::mul_.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::mul_.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::mul_.Scalar_Tensor(Scalar self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::multiply.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::multiply.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::multiply.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::multiply.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::multiply.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::multiply.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::multiply.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::multiply.Scalar_Tensor(Scalar self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::multiply_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::multiply_.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::multiply_.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::multiply_.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::multiply_.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::multiply_.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::multiply_.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::multiply_.Scalar_Tensor(Scalar self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::div.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::div.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::div.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::div.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::div.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::div.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::div.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::div.Scalar_Tensor(Scalar self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::div_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::div_.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::div_.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::div_.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::div_.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::div_.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::div_.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::div_.Scalar_Tensor(Scalar self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::div.MaskedPair_mode(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other, *, str? rounding_mode=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::div.MaskedPair_Tensor_mode(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other, *, str? rounding_mode=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::div.Tensor_MaskedPair_mode(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other, *, str? rounding_mode=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::div.Tensor_mode(Tensor self, Tensor other, *, str? rounding_mode=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::div.MaskedPair_Scalar_mode(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other, *, str? rounding_mode=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::div.Tensor_Scalar_mode(Tensor self, Scalar other, *, str? rounding_mode=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::div.Scalar_MaskedPair_mode(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other, *, str? rounding_mode=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::div.Scalar_Tensor_mode(Scalar self, Tensor other, *, str? rounding_mode=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::div_.MaskedPair_mode(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other, *, str? rounding_mode=None) -> __torch__.torch.classes.partialtorch.MaskedPair

- func: partialtorch::div_.MaskedPair_Tensor_mode(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other, *, str? rounding_mode=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::div_.Tensor_MaskedPair_mode(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other, *, str? rounding_mode=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::div_.Tensor_mode(Tensor self, Tensor other, *, str? rounding_mode=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::div_.MaskedPair_Scalar_mode(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other, *, str? rounding_mode=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::div_.Tensor_Scalar_mode(Tensor self, Scalar other, *, str? rounding_mode=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::div_.Scalar_MaskedPair_mode(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other, *, str? rounding_mode=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::div_.Scalar_Tensor_mode(Scalar self, Tensor other, *, str? rounding_mode=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::divide.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::divide.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::divide.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::divide.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::divide.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::divide.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::divide.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::divide.Scalar_Tensor(Scalar self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::divide_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::divide_.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::divide_.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::divide_.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::divide_.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::divide_.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::divide_.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::divide_.Scalar_Tensor(Scalar self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::divide.MaskedPair_mode(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other, *, str? rounding_mode=None) -> __torch__.torch.classes.partialtorch.MaskedPa
  ir
- func: partialtorch::divide.MaskedPair_Tensor_mode(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other, *, str? rounding_mode=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::divide.Tensor_MaskedPair_mode(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other, *, str? rounding_mode=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::divide.Tensor_mode(Tensor self, Tensor other, *, str? rounding_mode=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::divide.MaskedPair_Scalar_mode(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other, *, str? rounding_mode=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::divide.Tensor_Scalar_mode(Tensor self, Scalar other, *, str? rounding_mode=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::divide.Scalar_MaskedPair_mode(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other, *, str? rounding_mode=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::divide.Scalar_Tensor_mode(Scalar self, Tensor other, *, str? rounding_mode=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::divide_.MaskedPair_mode(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other, *, str? rounding_mode=None) -> __torch__.torch.classes.partialtorch.MaskedP
  air
- func: partialtorch::divide_.MaskedPair_Tensor_mode(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other, *, str? rounding_mode=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::divide_.Tensor_MaskedPair_mode(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other, *, str? rounding_mode=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::divide_.Tensor_mode(Tensor self, Tensor other, *, str? rounding_mode=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::divide_.MaskedPair_Scalar_mode(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other, *, str? rounding_mode=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::divide_.Tensor_Scalar_mode(Tensor self, Scalar other, *, str? rounding_mode=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::divide_.Scalar_MaskedPair_mode(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other, *, str? rounding_mode=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::divide_.Scalar_Tensor_mode(Scalar self, Tensor other, *, str? rounding_mode=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::floor_divide.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::floor_divide.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::floor_divide.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::floor_divide.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::floor_divide.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::floor_divide.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::floor_divide.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::floor_divide.Scalar_Tensor(Scalar self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::floor_divide_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::floor_divide_.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::floor_divide_.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::floor_divide_.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::floor_divide_.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::floor_divide_.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::floor_divide_.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::floor_divide_.Scalar_Tensor(Scalar self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::true_divide.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::true_divide.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::true_divide.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::true_divide.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::true_divide.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::true_divide.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::true_divide.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::true_divide.Scalar_Tensor(Scalar self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::true_divide_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::true_divide_.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::true_divide_.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::true_divide_.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::true_divide_.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::true_divide_.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::true_divide_.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::true_divide_.Scalar_Tensor(Scalar self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::fmod.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::fmod.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::fmod.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::fmod.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::fmod.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::fmod.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::fmod.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::fmod.Scalar_Tensor(Scalar self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::fmod_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::fmod_.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::fmod_.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::fmod_.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::fmod_.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::fmod_.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::fmod_.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::fmod_.Scalar_Tensor(Scalar self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::remainder.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::remainder.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::remainder.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::remainder.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::remainder.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::remainder.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::remainder.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::remainder.Scalar_Tensor(Scalar self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::remainder_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::remainder_.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::remainder_.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::remainder_.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::remainder_.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::remainder_.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::remainder_.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::remainder_.Scalar_Tensor(Scalar self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::pow.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::pow.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::pow.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::pow.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::pow.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::pow.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::pow.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::pow.Scalar_Tensor(Scalar self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::pow_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::pow_.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::pow_.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::pow_.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::pow_.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::pow_.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::pow_.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::pow_.Scalar_Tensor(Scalar self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::float_power.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::float_power.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::float_power.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::float_power.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::float_power.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::float_power.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::float_power.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::float_power.Scalar_Tensor(Scalar self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::float_power_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::float_power_.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::float_power_.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::float_power_.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::float_power_.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::float_power_.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::float_power_.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::float_power_.Scalar_Tensor(Scalar self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::atan2.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::atan2.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::atan2.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::atan2.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::atan2_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::atan2_.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::atan2_.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::atan2_.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::arctan2.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::arctan2.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::arctan2.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::arctan2.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::arctan2_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::arctan2_.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::arctan2_.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::arctan2_.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::logaddexp.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::logaddexp.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::logaddexp.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::logaddexp.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::logaddexp2.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::logaddexp2.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::logaddexp2.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::logaddexp2.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::nextafter.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::nextafter.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::nextafter.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::nextafter.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::nextafter_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::nextafter_.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::nextafter_.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::nextafter_.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::ldexp.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::ldexp.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::ldexp.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::ldexp.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::ldexp_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::ldexp_.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::ldexp_.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::ldexp_.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::lerp.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other, Scalar weight) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::lerp.MaskedPair_Tensor_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other, Scalar weight) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::lerp.Tensor_MaskedPair_Scalar(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other, Scalar weight) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::lerp.Tensor_Scalar(Tensor self, Tensor other, Scalar weight) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::lerp_.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other, Scalar weight) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::lerp_.MaskedPair_Tensor_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other, Scalar weight) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::lerp_.Tensor_MaskedPair_Scalar(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other, Scalar weight) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::lerp_.Tensor_Scalar(Tensor self, Tensor other, Scalar weight) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::lerp.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other, Tensor weight) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::lerp.MaskedPair_Tensor_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other, Tensor weight) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::lerp.Tensor_MaskedPair_Tensor(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other, Tensor weight) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::lerp.Tensor_Tensor(Tensor self, Tensor other, Tensor weight) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::lerp_.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other, Tensor weight) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::lerp_.MaskedPair_Tensor_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other, Tensor weight) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::lerp_.Tensor_MaskedPair_Tensor(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other, Tensor weight) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::lerp_.Tensor_Tensor(Tensor self, Tensor other, Tensor weight) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::allclose.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other, float rtol=1e-05, float atol=1e-08, bool equal_nan=False) -> bool
- func: partialtorch::allclose.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other, float rtol=1e-05, float atol=1e-08, bool equal_nan=False) -> bool
- func: partialtorch::allclose.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other, float rtol=1e-05, float atol=1e-08, bool equal_nan=False) -> bool
- func: partialtorch::allclose.Tensor(Tensor self, Tensor other, float rtol=1e-05, float atol=1e-08, bool equal_nan=False) -> bool
- func: partialtorch::isclose.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other, float rtol=1e-05, float atol=1e-08, bool equal_nan=False) -> __torch__.torch.cla
  sses.partialtorch.MaskedPair
- func: partialtorch::isclose.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other, float rtol=1e-05, float atol=1e-08, bool equal_nan=False) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::isclose.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other, float rtol=1e-05, float atol=1e-08, bool equal_nan=False) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::isclose.Tensor(Tensor self, Tensor other, float rtol=1e-05, float atol=1e-08, bool equal_nan=False) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::equal.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> bool
- func: partialtorch::equal.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> bool
- func: partialtorch::equal.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> bool
- func: partialtorch::equal.Tensor(Tensor self, Tensor other) -> bool
- func: partialtorch::eq.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::eq.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::eq.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::eq.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::eq.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::eq.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::eq.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::eq.Scalar_Tensor(Scalar self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::eq_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::eq_.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::eq_.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::eq_.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::eq_.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::eq_.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::eq_.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::eq_.Scalar_Tensor(Scalar self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::ne.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::ne.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::ne.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::ne.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::ne.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::ne.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::ne.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::ne.Scalar_Tensor(Scalar self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::ne_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::ne_.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::ne_.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::ne_.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::ne_.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::ne_.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::ne_.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::ne_.Scalar_Tensor(Scalar self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::not_equal.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::not_equal.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::not_equal.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::not_equal.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::not_equal.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::not_equal.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::not_equal.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::not_equal.Scalar_Tensor(Scalar self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::not_equal_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::not_equal_.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::not_equal_.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::not_equal_.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::not_equal_.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::not_equal_.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::not_equal_.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::not_equal_.Scalar_Tensor(Scalar self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::lt.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::lt.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::lt.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::lt.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::lt.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::lt.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::lt.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::lt.Scalar_Tensor(Scalar self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::lt_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::lt_.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::lt_.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::lt_.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::lt_.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::lt_.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::lt_.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::lt_.Scalar_Tensor(Scalar self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::less.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::less.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::less.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::less.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::less.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::less.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::less.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::less.Scalar_Tensor(Scalar self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::less_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::less_.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::less_.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::less_.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::less_.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::less_.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::less_.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::less_.Scalar_Tensor(Scalar self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::gt.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::gt.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::gt.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::gt.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::gt.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::gt.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::gt.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::gt.Scalar_Tensor(Scalar self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::gt_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::gt_.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::gt_.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::gt_.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::gt_.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::gt_.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::gt_.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::gt_.Scalar_Tensor(Scalar self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::greater.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::greater.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::greater.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::greater.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::greater.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::greater.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::greater.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::greater.Scalar_Tensor(Scalar self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::greater_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::greater_.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::greater_.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::greater_.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::greater_.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::greater_.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::greater_.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::greater_.Scalar_Tensor(Scalar self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::le.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::le.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::le.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::le.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::le.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::le.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::le.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::le.Scalar_Tensor(Scalar self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::le_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::le_.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::le_.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::le_.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::le_.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::le_.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::le_.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::le_.Scalar_Tensor(Scalar self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::less_equal.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::less_equal.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::less_equal.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::less_equal.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::less_equal.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::less_equal.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::less_equal.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::less_equal.Scalar_Tensor(Scalar self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::less_equal_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::less_equal_.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::less_equal_.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::less_equal_.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::less_equal_.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::less_equal_.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::less_equal_.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::less_equal_.Scalar_Tensor(Scalar self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::ge.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::ge.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::ge.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::ge.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::ge.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::ge.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::ge.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::ge.Scalar_Tensor(Scalar self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::ge_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::ge_.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::ge_.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::ge_.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::ge_.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::ge_.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::ge_.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::ge_.Scalar_Tensor(Scalar self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::greater_equal.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::greater_equal.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::greater_equal.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::greater_equal.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::greater_equal.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::greater_equal.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::greater_equal.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::greater_equal.Scalar_Tensor(Scalar self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::greater_equal_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::greater_equal_.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::greater_equal_.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::greater_equal_.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::greater_equal_.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::greater_equal_.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::greater_equal_.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::greater_equal_.Scalar_Tensor(Scalar self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::min.MaskedPair_other(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::min.MaskedPair_Tensor_other(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::min.Tensor_MaskedPair_other(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::min.Tensor_other(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::max.MaskedPair_other(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::max.MaskedPair_Tensor_other(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::max.Tensor_MaskedPair_other(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::max.Tensor_other(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::minimum.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::minimum.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::minimum.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::minimum.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::maxium.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::maxium.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::maxium.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::maxium.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::fmin.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::fmin.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::fmin.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::fmin.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::fmax.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::fmax.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::fmax.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::fmax.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_convolution.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair input, Tensor weight, Tensor? bias, int[1] stride, int[1] padding, int[1] dilation, bool transposed, int[1] output_padding, int g
  roups) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_convolution.Tensor(Tensor input, Tensor weight, Tensor? bias, int[1] stride, int[1] padding, int[1] dilation, bool transposed, int[1] output_padding, int groups) -> __torch__.torch.classes.partialtorc
  h.MaskedPair
- func: partialtorch::partial_convolution.MaskedPair_scaled(__torch__.torch.classes.partialtorch.MaskedPair input, Tensor weight, Tensor? bias, int[1] stride, int[1] padding, int[1] dilation, bool transposed, int[1] output_padding
  , int groups, *, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_convolution.Tensor_scaled(Tensor input, Tensor weight, Tensor? bias, int[1] stride, int[1] padding, int[1] dilation, bool transposed, int[1] output_padding, int groups, *, bool scaled) -> __torch__.to
  rch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_convolution.MaskedPair_symint(__torch__.torch.classes.partialtorch.MaskedPair input, Tensor weight, Tensor? bias, int[1] stride, SymInt[1] padding, int[1] dilation, bool transposed, SymInt[1] output_p
  adding, int groups) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_convolution.Tensor_symint(Tensor input, Tensor weight, Tensor? bias, int[1] stride, SymInt[1] padding, int[1] dilation, bool transposed, SymInt[1] output_padding, int groups) -> __torch__.torch.classe
  s.partialtorch.MaskedPair
- func: partialtorch::partial_convolution.MaskedPair_symint_scaled(__torch__.torch.classes.partialtorch.MaskedPair input, Tensor weight, Tensor? bias, int[1] stride, SymInt[1] padding, int[1] dilation, bool transposed, SymInt[1] o
  utput_padding, int groups, *, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_convolution.Tensor_symint_scaled(Tensor input, Tensor weight, Tensor? bias, int[1] stride, SymInt[1] padding, int[1] dilation, bool transposed, SymInt[1] output_padding, int groups, *, bool scaled) ->
  __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_conv1d.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair input, Tensor weight, Tensor? bias=None, int[1] stride=1, SymInt[1] padding=0, int[1] dilation=1, int groups=1) -> __torch__.torch.cla
  sses.partialtorch.MaskedPair
- func: partialtorch::partial_conv1d.Tensor(Tensor input, Tensor weight, Tensor? bias=None, int[1] stride=1, SymInt[1] padding=0, int[1] dilation=1, int groups=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_conv1d.MaskedPair_scaled(__torch__.torch.classes.partialtorch.MaskedPair input, Tensor weight, Tensor? bias=None, int[1] stride=1, SymInt[1] padding=0, int[1] dilation=1, int groups=1, *, bool scaled)
  -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_conv1d.Tensor_scaled(Tensor input, Tensor weight, Tensor? bias=None, int[1] stride=1, SymInt[1] padding=0, int[1] dilation=1, int groups=1, *, bool scaled) -> __torch__.torch.classes.partialtorch.Mask
  edPair
- func: partialtorch::partial_conv1d.MaskedPair_padding(__torch__.torch.classes.partialtorch.MaskedPair input, Tensor weight, Tensor? bias=None, int[1] stride=1, str padding="valid", int[1] dilation=1, int groups=1) -> __torch__.t
  orch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_conv1d.Tensor_padding(Tensor input, Tensor weight, Tensor? bias=None, int[1] stride=1, str padding="valid", int[1] dilation=1, int groups=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_conv1d.MaskedPair_padding_scaled(__torch__.torch.classes.partialtorch.MaskedPair input, Tensor weight, Tensor? bias=None, int[1] stride=1, str padding="valid", int[1] dilation=1, int groups=1, *, bool
  scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_conv1d.Tensor_padding_scaled(Tensor input, Tensor weight, Tensor? bias=None, int[1] stride=1, str padding="valid", int[1] dilation=1, int groups=1, *, bool scaled) -> __torch__.torch.classes.partialto
  rch.MaskedPair
- func: partialtorch::partial_conv2d.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair input, Tensor weight, Tensor? bias=None, int[2] stride=1, SymInt[2] padding=0, int[2] dilation=1, int groups=1) -> __torch__.torch.cla
  sses.partialtorch.MaskedPair
- func: partialtorch::partial_conv2d.Tensor(Tensor input, Tensor weight, Tensor? bias=None, int[2] stride=1, SymInt[2] padding=0, int[2] dilation=1, int groups=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_conv2d.MaskedPair_scaled(__torch__.torch.classes.partialtorch.MaskedPair input, Tensor weight, Tensor? bias=None, int[2] stride=1, SymInt[2] padding=0, int[2] dilation=1, int groups=1, *, bool scaled)
  -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_conv2d.Tensor_scaled(Tensor input, Tensor weight, Tensor? bias=None, int[2] stride=1, SymInt[2] padding=0, int[2] dilation=1, int groups=1, *, bool scaled) -> __torch__.torch.classes.partialtorch.Mask
  edPair
- func: partialtorch::partial_conv2d.MaskedPair_padding(__torch__.torch.classes.partialtorch.MaskedPair input, Tensor weight, Tensor? bias=None, int[2] stride=1, str padding="valid", int[2] dilation=1, int groups=1) -> __torch__.t
  orch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_conv2d.Tensor_padding(Tensor input, Tensor weight, Tensor? bias=None, int[2] stride=1, str padding="valid", int[2] dilation=1, int groups=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_conv2d.MaskedPair_padding_scaled(__torch__.torch.classes.partialtorch.MaskedPair input, Tensor weight, Tensor? bias=None, int[2] stride=1, str padding="valid", int[2] dilation=1, int groups=1, *, bool
  scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_conv2d.Tensor_padding_scaled(Tensor input, Tensor weight, Tensor? bias=None, int[2] stride=1, str padding="valid", int[2] dilation=1, int groups=1, *, bool scaled) -> __torch__.torch.classes.partialto
  rch.MaskedPair
- func: partialtorch::partial_conv3d.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair input, Tensor weight, Tensor? bias=None, int[3] stride=1, SymInt[3] padding=0, int[3] dilation=1, int groups=1) -> __torch__.torch.cla
  sses.partialtorch.MaskedPair
- func: partialtorch::partial_conv3d.Tensor(Tensor input, Tensor weight, Tensor? bias=None, int[3] stride=1, SymInt[3] padding=0, int[3] dilation=1, int groups=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_conv3d.MaskedPair_scaled(__torch__.torch.classes.partialtorch.MaskedPair input, Tensor weight, Tensor? bias=None, int[3] stride=1, SymInt[3] padding=0, int[3] dilation=1, int groups=1, *, bool scaled)
  -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_conv3d.Tensor_scaled(Tensor input, Tensor weight, Tensor? bias=None, int[3] stride=1, SymInt[3] padding=0, int[3] dilation=1, int groups=1, *, bool scaled) -> __torch__.torch.classes.partialtorch.Mask
  edPair
- func: partialtorch::partial_conv3d.MaskedPair_padding(__torch__.torch.classes.partialtorch.MaskedPair input, Tensor weight, Tensor? bias=None, int[3] stride=1, str padding="valid", int[3] dilation=1, int groups=1) -> __torch__.t
  orch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_conv3d.Tensor_padding(Tensor input, Tensor weight, Tensor? bias=None, int[3] stride=1, str padding="valid", int[3] dilation=1, int groups=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_conv3d.MaskedPair_padding_scaled(__torch__.torch.classes.partialtorch.MaskedPair input, Tensor weight, Tensor? bias=None, int[3] stride=1, str padding="valid", int[3] dilation=1, int groups=1, *, bool
  scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_conv3d.Tensor_padding_scaled(Tensor input, Tensor weight, Tensor? bias=None, int[3] stride=1, str padding="valid", int[3] dilation=1, int groups=1, *, bool scaled) -> __torch__.torch.classes.partialto
  rch.MaskedPair
- func: partialtorch::partial_conv_transpose1d.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair input, Tensor weight, Tensor? bias=None, int[1] stride=1, SymInt[1] padding=0, SymInt[1] output_padding=0, int groups=1, int
  [1] dilation=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_conv_transpose1d.Tensor(Tensor input, Tensor weight, Tensor? bias=None, int[1] stride=1, SymInt[1] padding=0, SymInt[1] output_padding=0, int groups=1, int[1] dilation=1) -> __torch__.torch.classes.pa
  rtialtorch.MaskedPair
- func: partialtorch::partial_conv_transpose1d.MaskedPair_scaled(__torch__.torch.classes.partialtorch.MaskedPair input, Tensor weight, Tensor? bias=None, int[1] stride=1, SymInt[1] padding=0, SymInt[1] output_padding=0, int groups
  =1, int[1] dilation=1, *, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_conv_transpose1d.Tensor_scaled(Tensor input, Tensor weight, Tensor? bias=None, int[1] stride=1, SymInt[1] padding=0, SymInt[1] output_padding=0, int groups=1, int[1] dilation=1, *, bool scaled) -> __t
  orch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_conv_transpose2d.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair input, Tensor weight, Tensor? bias=None, int[2] stride=1, SymInt[2] padding=0, SymInt[2] output_padding=0, int groups=1, int
  [2] dilation=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_conv_transpose2d.Tensor(Tensor input, Tensor weight, Tensor? bias=None, int[2] stride=1, SymInt[2] padding=0, SymInt[2] output_padding=0, int groups=1, int[2] dilation=1) -> __torch__.torch.classes.pa
  rtialtorch.MaskedPair
- func: partialtorch::partial_conv_transpose2d.MaskedPair_scaled(__torch__.torch.classes.partialtorch.MaskedPair input, Tensor weight, Tensor? bias=None, int[2] stride=1, SymInt[2] padding=0, SymInt[2] output_padding=0, int groups
  =1, int[2] dilation=1, *, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_conv_transpose2d.Tensor_scaled(Tensor input, Tensor weight, Tensor? bias=None, int[2] stride=1, SymInt[2] padding=0, SymInt[2] output_padding=0, int groups=1, int[2] dilation=1, *, bool scaled) -> __t
  orch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_conv_transpose3d.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair input, Tensor weight, Tensor? bias=None, int[3] stride=1, SymInt[3] padding=0, SymInt[3] output_padding=0, int groups=1, int
  [3] dilation=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_conv_transpose3d.Tensor(Tensor input, Tensor weight, Tensor? bias=None, int[3] stride=1, SymInt[3] padding=0, SymInt[3] output_padding=0, int groups=1, int[3] dilation=1) -> __torch__.torch.classes.pa
  rtialtorch.MaskedPair
- func: partialtorch::partial_conv_transpose3d.MaskedPair_scaled(__torch__.torch.classes.partialtorch.MaskedPair input, Tensor weight, Tensor? bias=None, int[3] stride=1, SymInt[3] padding=0, SymInt[3] output_padding=0, int groups
  =1, int[3] dilation=1, *, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_conv_transpose3d.Tensor_scaled(Tensor input, Tensor weight, Tensor? bias=None, int[3] stride=1, SymInt[3] padding=0, SymInt[3] output_padding=0, int groups=1, int[3] dilation=1, *, bool scaled) -> __t
  orch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_linear.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair input, Tensor weight, Tensor? bias=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_linear.Tensor(Tensor input, Tensor weight, Tensor? bias=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_linear.MaskedPair_scaled(__torch__.torch.classes.partialtorch.MaskedPair input, Tensor weight, Tensor? bias=None, *, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_linear.Tensor_scaled(Tensor input, Tensor weight, Tensor? bias=None, *, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_bilinear.MaskedPair_MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair input1, __torch__.torch.classes.partialtorch.MaskedPair input2, Tensor weight, Tensor? bias=None) -> __torch__.torch.clas
  ses.partialtorch.MaskedPair
- func: partialtorch::partial_bilinear.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair input1, Tensor input2, Tensor weight, Tensor? bias=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_bilinear.Tensor_MaskedPair(Tensor input1, __torch__.torch.classes.partialtorch.MaskedPair input2, Tensor weight, Tensor? bias=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_bilinear.Tensor_Tensor(Tensor input1, Tensor input2, Tensor weight, Tensor? bias=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_bilinear.MaskedPair_MaskedPair_scaled(__torch__.torch.classes.partialtorch.MaskedPair input1, __torch__.torch.classes.partialtorch.MaskedPair input2, Tensor weight, Tensor? bias=None, *, bool scaled)
  -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_bilinear.MaskedPair_Tensor_scaled(__torch__.torch.classes.partialtorch.MaskedPair input1, Tensor input2, Tensor weight, Tensor? bias=None, *, bool scaled) -> __torch__.torch.classes.partialtorch.Maske
  dPair
- func: partialtorch::partial_bilinear.Tensor_MaskedPair_scaled(Tensor input1, __torch__.torch.classes.partialtorch.MaskedPair input2, Tensor weight, Tensor? bias=None, *, bool scaled) -> __torch__.torch.classes.partialtorch.Maske
  dPair
- func: partialtorch::partial_bilinear.Tensor_Tensor_scaled(Tensor input1, Tensor input2, Tensor weight, Tensor? bias=None, *, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::linalg_partial_multi_dot.MaskedPairList(__torch__.torch.classes.partialtorch.MaskedPair[1] tensors) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::linalg_partial_multi_dot.TensorList(Tensor[1] tensors) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_einsum.MaskedPairList(str equation, __torch__.torch.classes.partialtorch.MaskedPair[1] tensors, *, int[1]? path=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_einsum.TensorList(str equation, Tensor[1] tensors, *, int[1]? path=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::batch_norm.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair input, Tensor? weight, Tensor? bias, Tensor? running_mean, Tensor? running_var, bool training, float momentum, float eps, bool cudnn_enabl
  ed) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::batch_norm.Tensor(Tensor input, Tensor? weight, Tensor? bias, Tensor? running_mean, Tensor? running_var, bool training, float momentum, float eps, bool cudnn_enabled) -> __torch__.torch.classes.partialtorch.M
  askedPair
- func: partialtorch::instance_norm.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair input, Tensor? weight, Tensor? bias, Tensor? running_mean, Tensor? running_var, bool use_input_stats, float momentum, float eps, bool c
  udnn_enabled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::instance_norm.Tensor(Tensor input, Tensor? weight, Tensor? bias, Tensor? running_mean, Tensor? running_var, bool use_input_stats, float momentum, float eps, bool cudnn_enabled) -> __torch__.torch.classes.part
  ialtorch.MaskedPair
- func: partialtorch::layer_norm.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair input, SymInt[1] normalized_shape, Tensor? weight=None, Tensor? bias=None, float eps=1e-5, bool cudnn_enabled=True) -> __torch__.torch.cla
  sses.partialtorch.MaskedPair
- func: partialtorch::layer_norm.Tensor(Tensor input, SymInt[1] normalized_shape, Tensor? weight=None, Tensor? bias=None, float eps=1e-5, bool cudnn_enabled=True) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::pad.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, SymInt[1] pad, str mode="constant", float? value=None, *, str mask_mode="constant", bool? mask_value=None) -> __torch__.torch.classes.parti
  altorch.MaskedPair
- func: partialtorch::pad.Tensor(Tensor self, SymInt[1] pad, str mode="constant", float? value=None, *, str mask_mode="constant", bool? mask_value=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_ger.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_ger.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_ger.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_ger.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_mm.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_mm.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_mm.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_mm.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_bmm.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_bmm.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_bmm.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_bmm.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_matmul.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_matmul.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_matmul.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_matmul.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::linalg_partial_matmul.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::linalg_partial_matmul.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::linalg_partial_matmul.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::linalg_partial_matmul.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_mv.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_mv.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_mv.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_mv.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_inner.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_inner.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_inner.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_inner.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_outer.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_outer.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_outer.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_outer.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_ger.MaskedPair_scaled(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other, *, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_ger.MaskedPair_Tensor_scaled(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other, *, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_ger.Tensor_MaskedPair_scaled(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other, *, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_ger.Tensor_scaled(Tensor self, Tensor other, *, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_mm.MaskedPair_scaled(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other, *, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_mm.MaskedPair_Tensor_scaled(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other, *, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_mm.Tensor_MaskedPair_scaled(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other, *, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_mm.Tensor_scaled(Tensor self, Tensor other, *, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_bmm.MaskedPair_scaled(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other, *, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_bmm.MaskedPair_Tensor_scaled(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other, *, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_bmm.Tensor_MaskedPair_scaled(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other, *, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_bmm.Tensor_scaled(Tensor self, Tensor other, *, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_matmul.MaskedPair_scaled(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other, *, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair

- func: partialtorch::partial_matmul.MaskedPair_Tensor_scaled(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other, *, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_matmul.Tensor_MaskedPair_scaled(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other, *, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_matmul.Tensor_scaled(Tensor self, Tensor other, *, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::linalg_partial_matmul.MaskedPair_scaled(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other, *, bool scaled) -> __torch__.torch.classes.partialtorch.Mas
  kedPair
- func: partialtorch::linalg_partial_matmul.MaskedPair_Tensor_scaled(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other, *, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::linalg_partial_matmul.Tensor_MaskedPair_scaled(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other, *, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::linalg_partial_matmul.Tensor_scaled(Tensor self, Tensor other, *, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_mv.MaskedPair_scaled(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other, *, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_mv.MaskedPair_Tensor_scaled(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other, *, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_mv.Tensor_MaskedPair_scaled(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other, *, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_mv.Tensor_scaled(Tensor self, Tensor other, *, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_inner.MaskedPair_scaled(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other, *, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_inner.MaskedPair_Tensor_scaled(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other, *, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_inner.Tensor_MaskedPair_scaled(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other, *, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_inner.Tensor_scaled(Tensor self, Tensor other, *, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_outer.MaskedPair_scaled(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other, *, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_outer.MaskedPair_Tensor_scaled(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other, *, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_outer.Tensor_MaskedPair_scaled(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other, *, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_outer.Tensor_scaled(Tensor self, Tensor other, *, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_bitwise_and.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_bitwise_and.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_bitwise_and.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_bitwise_and.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_bitwise_and.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_bitwise_and.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_bitwise_and.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_bitwise_and.Scalar_Tensor(Scalar self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_bitwise_and_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_bitwise_and_.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_bitwise_and_.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_bitwise_and_.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_bitwise_and_.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_bitwise_and_.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_bitwise_and_.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_bitwise_and_.Scalar_Tensor(Scalar self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_bitwise_or.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_bitwise_or.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_bitwise_or.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_bitwise_or.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_bitwise_or.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_bitwise_or.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_bitwise_or.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_bitwise_or.Scalar_Tensor(Scalar self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_bitwise_or_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_bitwise_or_.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_bitwise_or_.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_bitwise_or_.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_bitwise_or_.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_bitwise_or_.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_bitwise_or_.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_bitwise_or_.Scalar_Tensor(Scalar self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_bitwise_xor.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_bitwise_xor.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_bitwise_xor.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_bitwise_xor.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_bitwise_xor.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_bitwise_xor.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_bitwise_xor.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_bitwise_xor.Scalar_Tensor(Scalar self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_bitwise_xor_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_bitwise_xor_.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_bitwise_xor_.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_bitwise_xor_.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_bitwise_xor_.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_bitwise_xor_.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_bitwise_xor_.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_bitwise_xor_.Scalar_Tensor(Scalar self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_add.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_add.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_add.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_add.Tensor(Tensor self, Tensor other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_add.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_add.Tensor_Scalar(Tensor self, Scalar other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_add.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_add.Scalar_Tensor(Scalar self, Tensor other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_add_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_add_.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_add_.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_add_.Tensor(Tensor self, Tensor other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_add_.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_add_.Tensor_Scalar(Tensor self, Scalar other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_add_.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_add_.Scalar_Tensor(Scalar self, Tensor other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_sub.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_sub.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_sub.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_sub.Tensor(Tensor self, Tensor other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_sub.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_sub.Tensor_Scalar(Tensor self, Scalar other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_sub.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_sub.Scalar_Tensor(Scalar self, Tensor other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_sub_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_sub_.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_sub_.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_sub_.Tensor(Tensor self, Tensor other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_sub_.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_sub_.Tensor_Scalar(Tensor self, Scalar other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_sub_.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_sub_.Scalar_Tensor(Scalar self, Tensor other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_subtract.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_subtract.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_subtract.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_subtract.Tensor(Tensor self, Tensor other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_subtract.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_subtract.Tensor_Scalar(Tensor self, Scalar other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_subtract.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_subtract.Scalar_Tensor(Scalar self, Tensor other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_subtract_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_subtract_.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_subtract_.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_subtract_.Tensor(Tensor self, Tensor other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_subtract_.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_subtract_.Tensor_Scalar(Tensor self, Scalar other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_subtract_.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_subtract_.Scalar_Tensor(Scalar self, Tensor other, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_mul.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_mul.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_mul.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_mul.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_mul.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_mul.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_mul.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_mul.Scalar_Tensor(Scalar self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_mul_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_mul_.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_mul_.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_mul_.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_mul_.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_mul_.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_mul_.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_mul_.Scalar_Tensor(Scalar self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_multiply.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_multiply.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_multiply.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_multiply.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_multiply.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_multiply.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_multiply.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_multiply.Scalar_Tensor(Scalar self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_multiply_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_multiply_.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_multiply_.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_multiply_.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_multiply_.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_multiply_.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_multiply_.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_multiply_.Scalar_Tensor(Scalar self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_div.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_div.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_div.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_div.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_div.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_div.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_div.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_div.Scalar_Tensor(Scalar self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_div_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_div_.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_div_.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_div_.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_div_.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_div_.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_div_.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_div_.Scalar_Tensor(Scalar self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_div.MaskedPair_mode(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other, *, str? rounding_mode=None) -> __torch__.torch.classes.partialtorch.Mas
  kedPair
- func: partialtorch::partial_div.MaskedPair_Tensor_mode(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other, *, str? rounding_mode=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_div.Tensor_MaskedPair_mode(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other, *, str? rounding_mode=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_div.Tensor_mode(Tensor self, Tensor other, *, str? rounding_mode=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_div.MaskedPair_Scalar_mode(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other, *, str? rounding_mode=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_div.Tensor_Scalar_mode(Tensor self, Scalar other, *, str? rounding_mode=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_div.Scalar_MaskedPair_mode(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other, *, str? rounding_mode=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_div.Scalar_Tensor_mode(Scalar self, Tensor other, *, str? rounding_mode=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_div_.MaskedPair_mode(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other, *, str? rounding_mode=None) -> __torch__.torch.classes.partialtorch.Ma
  skedPair
- func: partialtorch::partial_div_.MaskedPair_Tensor_mode(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other, *, str? rounding_mode=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_div_.Tensor_MaskedPair_mode(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other, *, str? rounding_mode=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_div_.Tensor_mode(Tensor self, Tensor other, *, str? rounding_mode=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_div_.MaskedPair_Scalar_mode(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other, *, str? rounding_mode=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_div_.Tensor_Scalar_mode(Tensor self, Scalar other, *, str? rounding_mode=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_div_.Scalar_MaskedPair_mode(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other, *, str? rounding_mode=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_div_.Scalar_Tensor_mode(Scalar self, Tensor other, *, str? rounding_mode=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_divide.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_divide.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_divide.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_divide.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_divide.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_divide.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_divide.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_divide.Scalar_Tensor(Scalar self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_divide_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_divide_.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_divide_.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_divide_.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_divide_.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_divide_.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_divide_.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_divide_.Scalar_Tensor(Scalar self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_divide.MaskedPair_mode(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other, *, str? rounding_mode=None) -> __torch__.torch.classes.partialtorch.
  MaskedPair
- func: partialtorch::partial_divide.MaskedPair_Tensor_mode(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other, *, str? rounding_mode=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_divide.Tensor_MaskedPair_mode(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other, *, str? rounding_mode=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_divide.Tensor_mode(Tensor self, Tensor other, *, str? rounding_mode=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_divide.MaskedPair_Scalar_mode(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other, *, str? rounding_mode=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_divide.Tensor_Scalar_mode(Tensor self, Scalar other, *, str? rounding_mode=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_divide.Scalar_MaskedPair_mode(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other, *, str? rounding_mode=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_divide.Scalar_Tensor_mode(Scalar self, Tensor other, *, str? rounding_mode=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_divide_.MaskedPair_mode(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other, *, str? rounding_mode=None) -> __torch__.torch.classes.partialtorch
  .MaskedPair
- func: partialtorch::partial_divide_.MaskedPair_Tensor_mode(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other, *, str? rounding_mode=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_divide_.Tensor_MaskedPair_mode(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other, *, str? rounding_mode=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_divide_.Tensor_mode(Tensor self, Tensor other, *, str? rounding_mode=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_divide_.MaskedPair_Scalar_mode(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other, *, str? rounding_mode=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_divide_.Tensor_Scalar_mode(Tensor self, Scalar other, *, str? rounding_mode=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_divide_.Scalar_MaskedPair_mode(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other, *, str? rounding_mode=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_divide_.Scalar_Tensor_mode(Scalar self, Tensor other, *, str? rounding_mode=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_floor_divide.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_floor_divide.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_floor_divide.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_floor_divide.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_floor_divide.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_floor_divide.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_floor_divide.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_floor_divide.Scalar_Tensor(Scalar self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_floor_divide_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_floor_divide_.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_floor_divide_.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_floor_divide_.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_floor_divide_.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_floor_divide_.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_floor_divide_.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_floor_divide_.Scalar_Tensor(Scalar self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_true_divide.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_true_divide.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_true_divide.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_true_divide.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_true_divide.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_true_divide.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_true_divide.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_true_divide.Scalar_Tensor(Scalar self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_true_divide_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_true_divide_.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_true_divide_.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_true_divide_.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_true_divide_.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_true_divide_.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_true_divide_.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_true_divide_.Scalar_Tensor(Scalar self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_logaddexp.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_logaddexp.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_logaddexp.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_logaddexp.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_logaddexp2.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_logaddexp2.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_logaddexp2.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_logaddexp2.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_add.MaskedPair_scaled(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other, *, Scalar alpha=1, bool scaled) -> __torch__.torch.classes.partialtor
  ch.MaskedPair
- func: partialtorch::partial_add.MaskedPair_Tensor_scaled(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other, *, Scalar alpha=1, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_add.Tensor_MaskedPair_scaled(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other, *, Scalar alpha=1, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_add.Tensor_scaled(Tensor self, Tensor other, *, Scalar alpha=1, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_add.MaskedPair_Scalar_scaled(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other, *, Scalar alpha=1, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_add.Tensor_Scalar_scaled(Tensor self, Scalar other, *, Scalar alpha=1, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_add.Scalar_MaskedPair_scaled(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other, *, Scalar alpha=1, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_add.Scalar_Tensor_scaled(Scalar self, Tensor other, *, Scalar alpha=1, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_add_.MaskedPair_scaled(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other, *, Scalar alpha=1, bool scaled) -> __torch__.torch.classes.partialto
  rch.MaskedPair
- func: partialtorch::partial_add_.MaskedPair_Tensor_scaled(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other, *, Scalar alpha=1, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_add_.Tensor_MaskedPair_scaled(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other, *, Scalar alpha=1, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_add_.Tensor_scaled(Tensor self, Tensor other, *, Scalar alpha=1, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_add_.MaskedPair_Scalar_scaled(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other, *, Scalar alpha=1, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_add_.Tensor_Scalar_scaled(Tensor self, Scalar other, *, Scalar alpha=1, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_add_.Scalar_MaskedPair_scaled(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other, *, Scalar alpha=1, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_add_.Scalar_Tensor_scaled(Scalar self, Tensor other, *, Scalar alpha=1, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_sub.MaskedPair_scaled(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other, *, Scalar alpha=1, bool scaled) -> __torch__.torch.classes.partialtor
  ch.MaskedPair
- func: partialtorch::partial_sub.MaskedPair_Tensor_scaled(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other, *, Scalar alpha=1, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_sub.Tensor_MaskedPair_scaled(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other, *, Scalar alpha=1, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_sub.Tensor_scaled(Tensor self, Tensor other, *, Scalar alpha=1, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_sub.MaskedPair_Scalar_scaled(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other, *, Scalar alpha=1, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_sub.Tensor_Scalar_scaled(Tensor self, Scalar other, *, Scalar alpha=1, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_sub.Scalar_MaskedPair_scaled(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other, *, Scalar alpha=1, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_sub.Scalar_Tensor_scaled(Scalar self, Tensor other, *, Scalar alpha=1, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_sub_.MaskedPair_scaled(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other, *, Scalar alpha=1, bool scaled) -> __torch__.torch.classes.partialto
  rch.MaskedPair
- func: partialtorch::partial_sub_.MaskedPair_Tensor_scaled(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other, *, Scalar alpha=1, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_sub_.Tensor_MaskedPair_scaled(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other, *, Scalar alpha=1, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_sub_.Tensor_scaled(Tensor self, Tensor other, *, Scalar alpha=1, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_sub_.MaskedPair_Scalar_scaled(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other, *, Scalar alpha=1, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_sub_.Tensor_Scalar_scaled(Tensor self, Scalar other, *, Scalar alpha=1, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_sub_.Scalar_MaskedPair_scaled(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other, *, Scalar alpha=1, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_sub_.Scalar_Tensor_scaled(Scalar self, Tensor other, *, Scalar alpha=1, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_subtract.MaskedPair_scaled(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other, *, Scalar alpha=1, bool scaled) -> __torch__.torch.classes.parti
  altorch.MaskedPair
- func: partialtorch::partial_subtract.MaskedPair_Tensor_scaled(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other, *, Scalar alpha=1, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_subtract.Tensor_MaskedPair_scaled(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other, *, Scalar alpha=1, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_subtract.Tensor_scaled(Tensor self, Tensor other, *, Scalar alpha=1, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_subtract.MaskedPair_Scalar_scaled(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other, *, Scalar alpha=1, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_subtract.Tensor_Scalar_scaled(Tensor self, Scalar other, *, Scalar alpha=1, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_subtract.Scalar_MaskedPair_scaled(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other, *, Scalar alpha=1, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_subtract.Scalar_Tensor_scaled(Scalar self, Tensor other, *, Scalar alpha=1, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_subtract_.MaskedPair_scaled(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other, *, Scalar alpha=1, bool scaled) -> __torch__.torch.classes.part
  ialtorch.MaskedPair
- func: partialtorch::partial_subtract_.MaskedPair_Tensor_scaled(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other, *, Scalar alpha=1, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_subtract_.Tensor_MaskedPair_scaled(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other, *, Scalar alpha=1, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_subtract_.Tensor_scaled(Tensor self, Tensor other, *, Scalar alpha=1, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_subtract_.MaskedPair_Scalar_scaled(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other, *, Scalar alpha=1, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_subtract_.Tensor_Scalar_scaled(Tensor self, Scalar other, *, Scalar alpha=1, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_subtract_.Scalar_MaskedPair_scaled(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other, *, Scalar alpha=1, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_subtract_.Scalar_Tensor_scaled(Scalar self, Tensor other, *, Scalar alpha=1, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_allclose.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other, float rtol=1e-05, float atol=1e-08) -> bool
- func: partialtorch::partial_allclose.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other, float rtol=1e-05, float atol=1e-08) -> bool
- func: partialtorch::partial_allclose.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other, float rtol=1e-05, float atol=1e-08) -> bool
- func: partialtorch::partial_allclose.Tensor(Tensor self, Tensor other, float rtol=1e-05, float atol=1e-08) -> bool
- func: partialtorch::partial_isclose.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other, float rtol=1e-05, float atol=1e-08) -> __torch__.torch.classes.partialto
  rch.MaskedPair
- func: partialtorch::partial_isclose.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other, float rtol=1e-05, float atol=1e-08) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_isclose.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other, float rtol=1e-05, float atol=1e-08) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_isclose.Tensor(Tensor self, Tensor other, float rtol=1e-05, float atol=1e-08) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_equal.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> bool
- func: partialtorch::partial_equal.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> bool
- func: partialtorch::partial_equal.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> bool
- func: partialtorch::partial_equal.Tensor(Tensor self, Tensor other) -> bool
- func: partialtorch::partial_eq.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_eq.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_eq.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_eq.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_eq.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_eq.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_eq.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_eq.Scalar_Tensor(Scalar self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_eq_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_eq_.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_eq_.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_eq_.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_eq_.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_eq_.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_eq_.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_eq_.Scalar_Tensor(Scalar self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_ne.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_ne.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_ne.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_ne.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_ne.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_ne.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_ne.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_ne.Scalar_Tensor(Scalar self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_ne_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_ne_.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_ne_.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_ne_.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_ne_.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_ne_.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_ne_.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_ne_.Scalar_Tensor(Scalar self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_not_equal.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_not_equal.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_not_equal.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_not_equal.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_not_equal.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_not_equal.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_not_equal.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_not_equal.Scalar_Tensor(Scalar self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_not_equal_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_not_equal_.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_not_equal_.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_not_equal_.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_not_equal_.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_not_equal_.Tensor_Scalar(Tensor self, Scalar other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_not_equal_.Scalar_MaskedPair(Scalar self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_not_equal_.Scalar_Tensor(Scalar self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_min.MaskedPair_other(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_min.MaskedPair_Tensor_other(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_min.Tensor_MaskedPair_other(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_min.Tensor_other(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_max.MaskedPair_other(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_max.MaskedPair_Tensor_other(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_max.Tensor_MaskedPair_other(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_max.Tensor_other(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_minimum.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_minimum.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_minimum.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_minimum.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_maxium.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_maxium.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_maxium.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_maxium.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_fmin.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_fmin.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_fmin.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_fmin.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_fmax.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_fmax.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_fmax.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_fmax.Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_addmm.MP_MP_MP(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair mat1, __torch__.torch.classes.partialtorch.MaskedPair mat2, *, Scalar beta=1, Scala
  r alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_addmm.MP_MP_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair mat1, Tensor mat2, *, Scalar beta=1, Scalar alpha=1) -> __torch__.torch.classes
  .partialtorch.MaskedPair
- func: partialtorch::partial_addmm.MP_Tensor_MP(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor mat1, __torch__.torch.classes.partialtorch.MaskedPair mat2, *, Scalar beta=1, Scalar alpha=1) -> __torch__.torch.classes
  .partialtorch.MaskedPair
- func: partialtorch::partial_addmm.MP_Tensor_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor mat1, Tensor mat2, *, Scalar beta=1, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_addmm.Tensor_MP_MP(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair mat1, __torch__.torch.classes.partialtorch.MaskedPair mat2, *, Scalar beta=1, Scalar alpha=1) -> __torch__.torch.classes
  .partialtorch.MaskedPair
- func: partialtorch::partial_addmm.Tensor_MP_Tensor(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair mat1, Tensor mat2, *, Scalar beta=1, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_addmm.Tensor_Tensor_MP(Tensor self, Tensor mat1, __torch__.torch.classes.partialtorch.MaskedPair mat2, *, Scalar beta=1, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_addmm.Tensor_Tensor_Tensor(Tensor self, Tensor mat1, Tensor mat2, *, Scalar beta=1, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_addmm_.MP_MP_MP(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair mat1, __torch__.torch.classes.partialtorch.MaskedPair mat2, *, Scalar beta=1, Scal
  ar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_addmm_.MP_MP_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair mat1, Tensor mat2, *, Scalar beta=1, Scalar alpha=1) -> __torch__.torch.classe
  s.partialtorch.MaskedPair
- func: partialtorch::partial_addmm_.MP_Tensor_MP(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor mat1, __torch__.torch.classes.partialtorch.MaskedPair mat2, *, Scalar beta=1, Scalar alpha=1) -> __torch__.torch.classe
  s.partialtorch.MaskedPair
- func: partialtorch::partial_addmm_.MP_Tensor_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor mat1, Tensor mat2, *, Scalar beta=1, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_addmm_.Tensor_MP_MP(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair mat1, __torch__.torch.classes.partialtorch.MaskedPair mat2, *, Scalar beta=1, Scalar alpha=1) -> __torch__.torch.classe
  s.partialtorch.MaskedPair
- func: partialtorch::partial_addmm_.Tensor_MP_Tensor(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair mat1, Tensor mat2, *, Scalar beta=1, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_addmm_.Tensor_Tensor_MP(Tensor self, Tensor mat1, __torch__.torch.classes.partialtorch.MaskedPair mat2, *, Scalar beta=1, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_addmm_.Tensor_Tensor_Tensor(Tensor self, Tensor mat1, Tensor mat2, *, Scalar beta=1, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_addbmm.MP_MP_MP(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair batch1, __torch__.torch.classes.partialtorch.MaskedPair batch2, *, Scalar beta=1,
  Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_addbmm.MP_MP_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair batch1, Tensor batch2, *, Scalar beta=1, Scalar alpha=1) -> __torch__.torch.cl
  asses.partialtorch.MaskedPair
- func: partialtorch::partial_addbmm.MP_Tensor_MP(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor batch1, __torch__.torch.classes.partialtorch.MaskedPair batch2, *, Scalar beta=1, Scalar alpha=1) -> __torch__.torch.cl
  asses.partialtorch.MaskedPair
- func: partialtorch::partial_addbmm.MP_Tensor_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor batch1, Tensor batch2, *, Scalar beta=1, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_addbmm.Tensor_MP_MP(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair batch1, __torch__.torch.classes.partialtorch.MaskedPair batch2, *, Scalar beta=1, Scalar alpha=1) -> __torch__.torch.cl
  asses.partialtorch.MaskedPair
- func: partialtorch::partial_addbmm.Tensor_MP_Tensor(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair batch1, Tensor batch2, *, Scalar beta=1, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_addbmm.Tensor_Tensor_MP(Tensor self, Tensor batch1, __torch__.torch.classes.partialtorch.MaskedPair batch2, *, Scalar beta=1, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_addbmm.Tensor_Tensor_Tensor(Tensor self, Tensor batch1, Tensor batch2, *, Scalar beta=1, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_addbmm_.MP_MP_MP(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair batch1, __torch__.torch.classes.partialtorch.MaskedPair batch2, *, Scalar beta=1,
  Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_addbmm_.MP_MP_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair batch1, Tensor batch2, *, Scalar beta=1, Scalar alpha=1) -> __torch__.torch.c
  lasses.partialtorch.MaskedPair
- func: partialtorch::partial_addbmm_.MP_Tensor_MP(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor batch1, __torch__.torch.classes.partialtorch.MaskedPair batch2, *, Scalar beta=1, Scalar alpha=1) -> __torch__.torch.c
  lasses.partialtorch.MaskedPair
- func: partialtorch::partial_addbmm_.MP_Tensor_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor batch1, Tensor batch2, *, Scalar beta=1, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_addbmm_.Tensor_MP_MP(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair batch1, __torch__.torch.classes.partialtorch.MaskedPair batch2, *, Scalar beta=1, Scalar alpha=1) -> __torch__.torch.c
  lasses.partialtorch.MaskedPair
- func: partialtorch::partial_addbmm_.Tensor_MP_Tensor(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair batch1, Tensor batch2, *, Scalar beta=1, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_addbmm_.Tensor_Tensor_MP(Tensor self, Tensor batch1, __torch__.torch.classes.partialtorch.MaskedPair batch2, *, Scalar beta=1, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_addbmm_.Tensor_Tensor_Tensor(Tensor self, Tensor batch1, Tensor batch2, *, Scalar beta=1, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_baddbmm.MP_MP_MP(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair batch1, __torch__.torch.classes.partialtorch.MaskedPair batch2, *, Scalar beta=1,
  Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_baddbmm.MP_MP_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair batch1, Tensor batch2, *, Scalar beta=1, Scalar alpha=1) -> __torch__.torch.c
  lasses.partialtorch.MaskedPair
- func: partialtorch::partial_baddbmm.MP_Tensor_MP(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor batch1, __torch__.torch.classes.partialtorch.MaskedPair batch2, *, Scalar beta=1, Scalar alpha=1) -> __torch__.torch.c
  lasses.partialtorch.MaskedPair
- func: partialtorch::partial_baddbmm.MP_Tensor_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor batch1, Tensor batch2, *, Scalar beta=1, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_baddbmm.Tensor_MP_MP(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair batch1, __torch__.torch.classes.partialtorch.MaskedPair batch2, *, Scalar beta=1, Scalar alpha=1) -> __torch__.torch.c
  lasses.partialtorch.MaskedPair
- func: partialtorch::partial_baddbmm.Tensor_MP_Tensor(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair batch1, Tensor batch2, *, Scalar beta=1, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_baddbmm.Tensor_Tensor_MP(Tensor self, Tensor batch1, __torch__.torch.classes.partialtorch.MaskedPair batch2, *, Scalar beta=1, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_baddbmm.Tensor_Tensor_Tensor(Tensor self, Tensor batch1, Tensor batch2, *, Scalar beta=1, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_baddbmm_.MP_MP_MP(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair batch1, __torch__.torch.classes.partialtorch.MaskedPair batch2, *, Scalar beta=1
  , Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_baddbmm_.MP_MP_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair batch1, Tensor batch2, *, Scalar beta=1, Scalar alpha=1) -> __torch__.torch.
  classes.partialtorch.MaskedPair
- func: partialtorch::partial_baddbmm_.MP_Tensor_MP(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor batch1, __torch__.torch.classes.partialtorch.MaskedPair batch2, *, Scalar beta=1, Scalar alpha=1) -> __torch__.torch.
  classes.partialtorch.MaskedPair
- func: partialtorch::partial_baddbmm_.MP_Tensor_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor batch1, Tensor batch2, *, Scalar beta=1, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_baddbmm_.Tensor_MP_MP(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair batch1, __torch__.torch.classes.partialtorch.MaskedPair batch2, *, Scalar beta=1, Scalar alpha=1) -> __torch__.torch.
  classes.partialtorch.MaskedPair
- func: partialtorch::partial_baddbmm_.Tensor_MP_Tensor(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair batch1, Tensor batch2, *, Scalar beta=1, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_baddbmm_.Tensor_Tensor_MP(Tensor self, Tensor batch1, __torch__.torch.classes.partialtorch.MaskedPair batch2, *, Scalar beta=1, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_baddbmm_.Tensor_Tensor_Tensor(Tensor self, Tensor batch1, Tensor batch2, *, Scalar beta=1, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_addmv.MP_MP_MP(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair mat, __torch__.torch.classes.partialtorch.MaskedPair vec, *, Scalar beta=1, Scalar
  alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_addmv.MP_MP_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair mat, Tensor vec, *, Scalar beta=1, Scalar alpha=1) -> __torch__.torch.classes.p
  artialtorch.MaskedPair
- func: partialtorch::partial_addmv.MP_Tensor_MP(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor mat, __torch__.torch.classes.partialtorch.MaskedPair vec, *, Scalar beta=1, Scalar alpha=1) -> __torch__.torch.classes.p
  artialtorch.MaskedPair
- func: partialtorch::partial_addmv.MP_Tensor_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor mat, Tensor vec, *, Scalar beta=1, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_addmv.Tensor_MP_MP(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair mat, __torch__.torch.classes.partialtorch.MaskedPair vec, *, Scalar beta=1, Scalar alpha=1) -> __torch__.torch.classes.p
  artialtorch.MaskedPair
- func: partialtorch::partial_addmv.Tensor_MP_Tensor(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair mat, Tensor vec, *, Scalar beta=1, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_addmv.Tensor_Tensor_MP(Tensor self, Tensor mat, __torch__.torch.classes.partialtorch.MaskedPair vec, *, Scalar beta=1, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_addmv.Tensor_Tensor_Tensor(Tensor self, Tensor mat, Tensor vec, *, Scalar beta=1, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_addmv_.MP_MP_MP(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair mat, __torch__.torch.classes.partialtorch.MaskedPair vec, *, Scalar beta=1, Scalar
  alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_addmv_.MP_MP_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair mat, Tensor vec, *, Scalar beta=1, Scalar alpha=1) -> __torch__.torch.classes.
  partialtorch.MaskedPair
- func: partialtorch::partial_addmv_.MP_Tensor_MP(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor mat, __torch__.torch.classes.partialtorch.MaskedPair vec, *, Scalar beta=1, Scalar alpha=1) -> __torch__.torch.classes.
  partialtorch.MaskedPair
- func: partialtorch::partial_addmv_.MP_Tensor_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor mat, Tensor vec, *, Scalar beta=1, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_addmv_.Tensor_MP_MP(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair mat, __torch__.torch.classes.partialtorch.MaskedPair vec, *, Scalar beta=1, Scalar alpha=1) -> __torch__.torch.classes.
  partialtorch.MaskedPair
- func: partialtorch::partial_addmv_.Tensor_MP_Tensor(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair mat, Tensor vec, *, Scalar beta=1, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_addmv_.Tensor_Tensor_MP(Tensor self, Tensor mat, __torch__.torch.classes.partialtorch.MaskedPair vec, *, Scalar beta=1, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_addmv_.Tensor_Tensor_Tensor(Tensor self, Tensor mat, Tensor vec, *, Scalar beta=1, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_addr.MP_MP_MP(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair vec1, __torch__.torch.classes.partialtorch.MaskedPair vec2, *, Scalar beta=1, Scalar
  alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_addr.MP_MP_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair vec1, Tensor vec2, *, Scalar beta=1, Scalar alpha=1) -> __torch__.torch.classes.
  partialtorch.MaskedPair
- func: partialtorch::partial_addr.MP_Tensor_MP(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor vec1, __torch__.torch.classes.partialtorch.MaskedPair vec2, *, Scalar beta=1, Scalar alpha=1) -> __torch__.torch.classes.
  partialtorch.MaskedPair
- func: partialtorch::partial_addr.MP_Tensor_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor vec1, Tensor vec2, *, Scalar beta=1, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_addr.Tensor_MP_MP(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair vec1, __torch__.torch.classes.partialtorch.MaskedPair vec2, *, Scalar beta=1, Scalar alpha=1) -> __torch__.torch.classes.
  partialtorch.MaskedPair
- func: partialtorch::partial_addr.Tensor_MP_Tensor(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair vec1, Tensor vec2, *, Scalar beta=1, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_addr.Tensor_Tensor_MP(Tensor self, Tensor vec1, __torch__.torch.classes.partialtorch.MaskedPair vec2, *, Scalar beta=1, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_addr.Tensor_Tensor_Tensor(Tensor self, Tensor vec1, Tensor vec2, *, Scalar beta=1, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_addr_.MP_MP_MP(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair vec1, __torch__.torch.classes.partialtorch.MaskedPair vec2, *, Scalar beta=1, Scala
  r alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_addr_.MP_MP_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair vec1, Tensor vec2, *, Scalar beta=1, Scalar alpha=1) -> __torch__.torch.classes
  .partialtorch.MaskedPair
- func: partialtorch::partial_addr_.MP_Tensor_MP(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor vec1, __torch__.torch.classes.partialtorch.MaskedPair vec2, *, Scalar beta=1, Scalar alpha=1) -> __torch__.torch.classes
  .partialtorch.MaskedPair
- func: partialtorch::partial_addr_.MP_Tensor_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor vec1, Tensor vec2, *, Scalar beta=1, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_addr_.Tensor_MP_MP(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair vec1, __torch__.torch.classes.partialtorch.MaskedPair vec2, *, Scalar beta=1, Scalar alpha=1) -> __torch__.torch.classes
  .partialtorch.MaskedPair
- func: partialtorch::partial_addr_.Tensor_MP_Tensor(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair vec1, Tensor vec2, *, Scalar beta=1, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_addr_.Tensor_Tensor_MP(Tensor self, Tensor vec1, __torch__.torch.classes.partialtorch.MaskedPair vec2, *, Scalar beta=1, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_addr_.Tensor_Tensor_Tensor(Tensor self, Tensor vec1, Tensor vec2, *, Scalar beta=1, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_addcmul.MP_MP_MP(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair tensor1, __torch__.torch.classes.partialtorch.MaskedPair tensor2, *, Scalar alpha
  =1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_addcmul.MP_MP_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair tensor1, Tensor tensor2, *, Scalar alpha=1) -> __torch__.torch.classes.partia
  ltorch.MaskedPair
- func: partialtorch::partial_addcmul.MP_Tensor_MP(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor tensor1, __torch__.torch.classes.partialtorch.MaskedPair tensor2, *, Scalar alpha=1) -> __torch__.torch.classes.partia
  ltorch.MaskedPair
- func: partialtorch::partial_addcmul.MP_Tensor_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor tensor1, Tensor tensor2, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_addcmul.Tensor_MP_MP(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair tensor1, __torch__.torch.classes.partialtorch.MaskedPair tensor2, *, Scalar alpha=1) -> __torch__.torch.classes.partia
  ltorch.MaskedPair
- func: partialtorch::partial_addcmul.Tensor_MP_Tensor(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair tensor1, Tensor tensor2, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_addcmul.Tensor_Tensor_MP(Tensor self, Tensor tensor1, __torch__.torch.classes.partialtorch.MaskedPair tensor2, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_addcmul.Tensor_Tensor_Tensor(Tensor self, Tensor tensor1, Tensor tensor2, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_addcmul_.MP_MP_MP(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair tensor1, __torch__.torch.classes.partialtorch.MaskedPair tensor2, *, Scalar alph
  a=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_addcmul_.MP_MP_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair tensor1, Tensor tensor2, *, Scalar alpha=1) -> __torch__.torch.classes.parti
  altorch.MaskedPair
- func: partialtorch::partial_addcmul_.MP_Tensor_MP(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor tensor1, __torch__.torch.classes.partialtorch.MaskedPair tensor2, *, Scalar alpha=1) -> __torch__.torch.classes.parti
  altorch.MaskedPair
- func: partialtorch::partial_addcmul_.MP_Tensor_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor tensor1, Tensor tensor2, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_addcmul_.Tensor_MP_MP(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair tensor1, __torch__.torch.classes.partialtorch.MaskedPair tensor2, *, Scalar alpha=1) -> __torch__.torch.classes.parti
  altorch.MaskedPair
- func: partialtorch::partial_addcmul_.Tensor_MP_Tensor(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair tensor1, Tensor tensor2, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_addcmul_.Tensor_Tensor_MP(Tensor self, Tensor tensor1, __torch__.torch.classes.partialtorch.MaskedPair tensor2, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_addcmul_.Tensor_Tensor_Tensor(Tensor self, Tensor tensor1, Tensor tensor2, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_addcdiv.MP_MP_MP(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair tensor1, __torch__.torch.classes.partialtorch.MaskedPair tensor2, *, Scalar alpha
  =1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_addcdiv.MP_MP_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair tensor1, Tensor tensor2, *, Scalar alpha=1) -> __torch__.torch.classes.partia
  ltorch.MaskedPair
- func: partialtorch::partial_addcdiv.MP_Tensor_MP(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor tensor1, __torch__.torch.classes.partialtorch.MaskedPair tensor2, *, Scalar alpha=1) -> __torch__.torch.classes.partia
  ltorch.MaskedPair
- func: partialtorch::partial_addcdiv.MP_Tensor_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor tensor1, Tensor tensor2, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_addcdiv.Tensor_MP_MP(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair tensor1, __torch__.torch.classes.partialtorch.MaskedPair tensor2, *, Scalar alpha=1) -> __torch__.torch.classes.partia
  ltorch.MaskedPair
- func: partialtorch::partial_addcdiv.Tensor_MP_Tensor(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair tensor1, Tensor tensor2, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_addcdiv.Tensor_Tensor_MP(Tensor self, Tensor tensor1, __torch__.torch.classes.partialtorch.MaskedPair tensor2, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_addcdiv.Tensor_Tensor_Tensor(Tensor self, Tensor tensor1, Tensor tensor2, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_addcdiv_.MP_MP_MP(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair tensor1, __torch__.torch.classes.partialtorch.MaskedPair tensor2, *, Scalar alph
  a=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_addcdiv_.MP_MP_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair tensor1, Tensor tensor2, *, Scalar alpha=1) -> __torch__.torch.classes.parti
  altorch.MaskedPair
- func: partialtorch::partial_addcdiv_.MP_Tensor_MP(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor tensor1, __torch__.torch.classes.partialtorch.MaskedPair tensor2, *, Scalar alpha=1) -> __torch__.torch.classes.parti
  altorch.MaskedPair
- func: partialtorch::partial_addcdiv_.MP_Tensor_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor tensor1, Tensor tensor2, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_addcdiv_.Tensor_MP_MP(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair tensor1, __torch__.torch.classes.partialtorch.MaskedPair tensor2, *, Scalar alpha=1) -> __torch__.torch.classes.parti
  altorch.MaskedPair
- func: partialtorch::partial_addcdiv_.Tensor_MP_Tensor(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair tensor1, Tensor tensor2, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_addcdiv_.Tensor_Tensor_MP(Tensor self, Tensor tensor1, __torch__.torch.classes.partialtorch.MaskedPair tensor2, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::partial_addcdiv_.Tensor_Tensor_Tensor(Tensor self, Tensor tensor1, Tensor tensor2, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::linalg_partial_matrix_power.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, int n) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::linalg_partial_matrix_power.Tensor(Tensor self, int n) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::to.MaskedPair_dtype_layout(__torch__.torch.classes.partialtorch.MaskedPair self, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None, bool non_blocking=False, bool copy=
  False, MemoryFormat? memory_format=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::to.Tensor_dtype_layout(Tensor self, *, ScalarType? dtype=None, Layout? layout=None, Device? device=None, bool? pin_memory=None, bool non_blocking=False, bool copy=False, MemoryFormat? memory_format=None) -> _
  _torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::to.MaskedPair_device(__torch__.torch.classes.partialtorch.MaskedPair self, Device device, ScalarType dtype, bool non_blocking=False, bool copy=False, MemoryFormat? memory_format=None) -> __torch__.torch.class
  es.partialtorch.MaskedPair
- func: partialtorch::to.Tensor_device(Tensor self, Device device, ScalarType dtype, bool non_blocking=False, bool copy=False, MemoryFormat? memory_format=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::to.MaskedPair_dtype(__torch__.torch.classes.partialtorch.MaskedPair self, ScalarType dtype, bool non_blocking=False, bool copy=False, MemoryFormat? memory_format=None) -> __torch__.torch.classes.partialtorch.
  MaskedPair
- func: partialtorch::to.Tensor_dtype(Tensor self, ScalarType dtype, bool non_blocking=False, bool copy=False, MemoryFormat? memory_format=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::to.MaskedPair_MaskedPair_other(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other, bool non_blocking=False, bool copy=False, MemoryFormat? memory_forma
  t=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::to.MaskedPair_Tensor_other(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other, bool non_blocking=False, bool copy=False, MemoryFormat? memory_format=None) -> __torch__.torch.classes.partialtor
  ch.MaskedPair
- func: partialtorch::to.Tensor_MaskedPair_other(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other, bool non_blocking=False, bool copy=False, MemoryFormat? memory_format=None) -> __torch__.torch.classes.partialtor
  ch.MaskedPair
- func: partialtorch::to.Tensor_Tensor_other(Tensor self, Tensor other, bool non_blocking=False, bool copy=False, MemoryFormat? memory_format=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::cpu.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::cpu.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::cuda.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::cuda.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::clone.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, *, MemoryFormat? memory_format=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::clone.Tensor(Tensor self, *, MemoryFormat? memory_format=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::contiguous.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, *, MemoryFormat memory_format="contiguous_format") -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::contiguous.Tensor(Tensor self, *, MemoryFormat memory_format="contiguous_format") -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::detach.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::detach.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::detach_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::detach_.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::detach_copy.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::detach_copy.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::atleast_1d.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::atleast_1d.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::atleast_2d.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::atleast_2d.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::atleast_3d.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::atleast_3d.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::diag.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, int diagonal=0) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::diag.Tensor(Tensor self, int diagonal=0) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::diag_embed.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, int offset=0, int dim1=0, int dim2=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::diag_embed.Tensor(Tensor self, int offset=0, int dim1=0, int dim2=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::diagflat.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, int offset=0) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::diagflat.Tensor(Tensor self, int offset=0) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::diagonal.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, int offset=0, int dim1=0, int dim2=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::diagonal.Tensor(Tensor self, int offset=0, int dim1=0, int dim2=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::diagonal.MaskedPair_Dimname(__torch__.torch.classes.partialtorch.MaskedPair self, *, Dimname outdim, Dimname dim1, Dimname dim2, int offset=0) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::diagonal.Tensor_Dimname(Tensor self, *, Dimname outdim, Dimname dim1, Dimname dim2, int offset=0) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::linalg_diagonal.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, int offset=0, int dim1=-2, int dim2=-1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::linalg_diagonal.Tensor(Tensor self, int offset=0, int dim1=-2, int dim2=-1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::narrow.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, int dim, SymInt start, SymInt length) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::narrow.Tensor(Tensor self, int dim, SymInt start, SymInt length) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::narrow.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, int dim, Tensor start, SymInt length) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::narrow.Tensor_Tensor(Tensor self, int dim, Tensor start, SymInt length) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::narrow_copy.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, int dim, SymInt start, SymInt length) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::narrow_copy.Tensor(Tensor self, int dim, SymInt start, SymInt length) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::select.MaskedPair_int(__torch__.torch.classes.partialtorch.MaskedPair self, int dim, SymInt index) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::select.Tensor_int(Tensor self, int dim, SymInt index) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::select.MaskedPair_Dimname(__torch__.torch.classes.partialtorch.MaskedPair self, Dimname dim, int index) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::select.Tensor_Dimname(Tensor self, Dimname dim, int index) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::repeat.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, SymInt[1] repeats) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::repeat.Tensor(Tensor self, SymInt[1] repeats) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::repeat_interleave.MaskedPair_int(__torch__.torch.classes.partialtorch.MaskedPair self, SymInt repeats, int? dim="None", *, int? output_size="None") -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::repeat_interleave.Tensor_int(Tensor self, SymInt repeats, int? dim="None", *, int? output_size="None") -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::repeat_interleave.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor repeats, int? dim="None", *, int? output_size="None") -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::repeat_interleave.Tensor_Tensor(Tensor self, Tensor repeats, int? dim="None", *, int? output_size="None") -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::tile.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, SymInt[1] dims) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::tile.Tensor(Tensor self, SymInt[1] dims) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::ravel.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::ravel.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::flatten.MaskedPair_using_ints(__torch__.torch.classes.partialtorch.MaskedPair self, int start_dim=0, int end_dim=-1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::flatten.Tensor_using_ints(Tensor self, int start_dim=0, int end_dim=-1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::flatten.MaskedPair_named_out_dim(__torch__.torch.classes.partialtorch.MaskedPair self, int start_dim, int end_dim, Dimname out_dim) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::flatten.Tensor_named_out_dim(Tensor self, int start_dim, int end_dim, Dimname out_dim) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::flatten.MaskedPair_using_names(__torch__.torch.classes.partialtorch.MaskedPair self, Dimname start_dim, Dimname end_dim, Dimname out_dim) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::flatten.Tensor_using_names(Tensor self, Dimname start_dim, Dimname end_dim, Dimname out_dim) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::flatten.MaskedPair_DimnameList(__torch__.torch.classes.partialtorch.MaskedPair self, Dimname[1] dims, Dimname out_dim) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::flatten.Tensor_DimnameList(Tensor self, Dimname[1] dims, Dimname out_dim) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::unflatten.MaskedPair_int(__torch__.torch.classes.partialtorch.MaskedPair self, int dim, SymInt[1] sizes) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::unflatten.Tensor_int(Tensor self, int dim, SymInt[1] sizes) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::unflatten.MaskedPair_Dimname(__torch__.torch.classes.partialtorch.MaskedPair self, Dimname dim, SymInt[1] sizes, Dimname[1] names) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::unflatten.Tensor_Dimname(Tensor self, Dimname dim, SymInt[1] sizes, Dimname[1] names) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::broadcast_to.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, SymInt[1] size) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::broadcast_to.Tensor(Tensor self, SymInt[1] size) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::expand.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, SymInt[1] size, *, bool implicit="False") -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::expand.Tensor(Tensor self, SymInt[1] size, *, bool implicit="False") -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::expand_as.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::expand_as.Tensor_Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::expand_as.MaskedPair_MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::expand_as.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::reshape.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, SymInt[1] size) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::reshape.Tensor(Tensor self, SymInt[1] size) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::reshape_as.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::reshape_as.Tensor_Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::reshape_as.MaskedPair_MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::reshape_as.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::view.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, SymInt[1] size) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::view.Tensor(Tensor self, SymInt[1] size) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::view.MaskedPair_dtype(__torch__.torch.classes.partialtorch.MaskedPair self, ScalarType dtype) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::view.Tensor_dtype(Tensor self, ScalarType dtype) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::view_as.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::view_as.Tensor_Tensor(Tensor self, Tensor other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::view_as.MaskedPair_MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::view_as.Tensor_MaskedPair(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair other) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::squeeze.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::squeeze.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::squeeze_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::squeeze_.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::squeeze.MaskedPair_dim(__torch__.torch.classes.partialtorch.MaskedPair self, int dim) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::squeeze.Tensor_dim(Tensor self, int dim) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::squeeze_.MaskedPair_dim(__torch__.torch.classes.partialtorch.MaskedPair self, int dim) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::squeeze_.Tensor_dim(Tensor self, int dim) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::squeeze.MaskedPair_dimname(__torch__.torch.classes.partialtorch.MaskedPair self, Dimname dim) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::squeeze.Tensor_dimname(Tensor self, Dimname dim) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::squeeze_.MaskedPair_dimname(__torch__.torch.classes.partialtorch.MaskedPair self, Dimname dim) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::squeeze_.Tensor_dimname(Tensor self, Dimname dim) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::squeeze.MaskedPair_dims(__torch__.torch.classes.partialtorch.MaskedPair self, int[1] dim) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::squeeze.Tensor_dims(Tensor self, int[1] dim) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::squeeze_.MaskedPair_dims(__torch__.torch.classes.partialtorch.MaskedPair self, int[1] dim) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::squeeze_.Tensor_dims(Tensor self, int[1] dim) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::unsqueeze.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, int dim) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::unsqueeze.Tensor(Tensor self, int dim) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::unsqueeze_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, int dim) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::unsqueeze_.Tensor(Tensor self, int dim) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::matrix_H.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::matrix_H.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::moveaxis.MaskedPair_intlist(__torch__.torch.classes.partialtorch.MaskedPair self, int[1] source, int[1] destination) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::moveaxis.Tensor_intlist(Tensor self, int[1] source, int[1] destination) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::moveaxes.MaskedPair_intlist(__torch__.torch.classes.partialtorch.MaskedPair self, int[1] source, int[1] destination) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::moveaxes.Tensor_intlist(Tensor self, int[1] source, int[1] destination) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::moveaxis.MaskedPair_int(__torch__.torch.classes.partialtorch.MaskedPair self, int source, int destination) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::moveaxis.Tensor_int(Tensor self, int source, int destination) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::moveaxes.MaskedPair_int(__torch__.torch.classes.partialtorch.MaskedPair self, int source, int destination) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::moveaxes.Tensor_int(Tensor self, int source, int destination) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::movedim.MaskedPair_intlist(__torch__.torch.classes.partialtorch.MaskedPair self, int[1] source, int[1] destination) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::movedim.Tensor_intlist(Tensor self, int[1] source, int[1] destination) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::movedims.MaskedPair_intlist(__torch__.torch.classes.partialtorch.MaskedPair self, int[1] source, int[1] destination) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::movedims.Tensor_intlist(Tensor self, int[1] source, int[1] destination) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::movedim.MaskedPair_int(__torch__.torch.classes.partialtorch.MaskedPair self, int source, int destination) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::movedim.Tensor_int(Tensor self, int source, int destination) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::movedims.MaskedPair_int(__torch__.torch.classes.partialtorch.MaskedPair self, int source, int destination) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::movedims.Tensor_int(Tensor self, int source, int destination) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::swapaxis.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, int axis0, int axis1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::swapaxis.Tensor(Tensor self, int axis0, int axis1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::swapaxis_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, int axis0, int axis1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::swapaxis_.Tensor(Tensor self, int axis0, int axis1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::swapaxes.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, int axis0, int axis1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::swapaxes.Tensor(Tensor self, int axis0, int axis1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::swapaxes_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, int axis0, int axis1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::swapaxes_.Tensor(Tensor self, int axis0, int axis1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::swapdim.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, int dim0, int dim1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::swapdim.Tensor(Tensor self, int dim0, int dim1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::swapdim_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, int dim0, int dim1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::swapdim_.Tensor(Tensor self, int dim0, int dim1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::swapdims.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, int dim0, int dim1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::swapdims.Tensor(Tensor self, int dim0, int dim1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::swapdims_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, int dim0, int dim1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::swapdims_.Tensor(Tensor self, int dim0, int dim1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::t.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::t.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::t_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::t_.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::transpose.MaskedPair_int(__torch__.torch.classes.partialtorch.MaskedPair self, int dim0, int dim1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::transpose.Tensor_int(Tensor self, int dim0, int dim1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::transpose_.MaskedPair_int(__torch__.torch.classes.partialtorch.MaskedPair self, int dim0, int dim1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::transpose_.Tensor_int(Tensor self, int dim0, int dim1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::transpose.MaskedPair_Dimname(__torch__.torch.classes.partialtorch.MaskedPair self, Dimname dim0, Dimname dim1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::transpose.Tensor_Dimname(Tensor self, Dimname dim0, Dimname dim1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::permute.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, int[1] dims) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::permute.Tensor(Tensor self, int[1] dims) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::permute_copy.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, int[1] dims) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::permute_copy.Tensor(Tensor self, int[1] dims) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::take.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor index) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::take.Tensor(Tensor self, Tensor index) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::take_along_dim.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor indices, int? dim=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::take_along_dim.Tensor(Tensor self, Tensor indices, int? dim=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::gather.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, int dim, Tensor index, *, bool sparse_grad="False") -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::gather.Tensor(Tensor self, int dim, Tensor index, *, bool sparse_grad="False") -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::gather.MaskedPair_dimname(__torch__.torch.classes.partialtorch.MaskedPair self, Dimname dim, Tensor index, *, bool sparse_grad="False") -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::gather.Tensor_dimname(Tensor self, Dimname dim, Tensor index, *, bool sparse_grad="False") -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::unfold.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, int dimension, int size, int step) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::unfold.Tensor(Tensor self, int dimension, int size, int step) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::im2col.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, int[2] kernel_size, int[2] dilation, int[2] padding, int[2] stride) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::im2col.Tensor(Tensor self, int[2] kernel_size, int[2] dilation, int[2] padding, int[2] stride) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::col2im.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, SymInt[2] output_size, int[2] kernel_size, int[2] dilation, int[2] padding, int[2] stride) -> __torch__.torch.classes.partialtorch.Maske
  dPair
- func: partialtorch::col2im.Tensor(Tensor self, SymInt[2] output_size, int[2] kernel_size, int[2] dilation, int[2] padding, int[2] stride) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::chunk.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, int chunks, int dim=0) -> __torch__.torch.classes.partialtorch.MaskedPair[1]
- func: partialtorch::chunk.Tensor(Tensor self, int chunks, int dim=0) -> __torch__.torch.classes.partialtorch.MaskedPair[1]
- func: partialtorch::split.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, SymInt split_size, int dim=0) -> __torch__.torch.classes.partialtorch.MaskedPair[1]
- func: partialtorch::split.Tensor_Tensor(Tensor self, SymInt split_size, int dim=0) -> __torch__.torch.classes.partialtorch.MaskedPair[1]
- func: partialtorch::split.MaskedPair_sizes(__torch__.torch.classes.partialtorch.MaskedPair self, SymInt[1] split_size, int dim=0) -> __torch__.torch.classes.partialtorch.MaskedPair[1]
- func: partialtorch::split.Tensor_sizes(Tensor self, SymInt[1] split_size, int dim=0) -> __torch__.torch.classes.partialtorch.MaskedPair[1]
- func: partialtorch::split_with_sizes.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, SymInt[1] split_sizes, int dim=0) -> __torch__.torch.classes.partialtorch.MaskedPair[1]
- func: partialtorch::split_with_sizes.Tensor(Tensor self, SymInt[1] split_sizes, int dim=0) -> __torch__.torch.classes.partialtorch.MaskedPair[1]
- func: partialtorch::split_copy.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, SymInt split_size, int dim=0) -> __torch__.torch.classes.partialtorch.MaskedPair[1]
- func: partialtorch::split_copy.Tensor_Tensor(Tensor self, SymInt split_size, int dim=0) -> __torch__.torch.classes.partialtorch.MaskedPair[1]
- func: partialtorch::split_with_sizes_copy.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, SymInt[1] split_sizes, int dim=0) -> __torch__.torch.classes.partialtorch.MaskedPair[1]
- func: partialtorch::split_with_sizes_copy.Tensor(Tensor self, SymInt[1] split_sizes, int dim=0) -> __torch__.torch.classes.partialtorch.MaskedPair[1]
- func: partialtorch::dsplit.MaskedPair_int(__torch__.torch.classes.partialtorch.MaskedPair self, int sections) -> __torch__.torch.classes.partialtorch.MaskedPair[1]
- func: partialtorch::dsplit.Tensor_int(Tensor self, int sections) -> __torch__.torch.classes.partialtorch.MaskedPair[1]
- func: partialtorch::dsplit.MaskedPair_array(__torch__.torch.classes.partialtorch.MaskedPair self, int[1] indices) -> __torch__.torch.classes.partialtorch.MaskedPair[1]
- func: partialtorch::dsplit.Tensor_array(Tensor self, int[1] indices) -> __torch__.torch.classes.partialtorch.MaskedPair[1]
- func: partialtorch::hsplit.MaskedPair_int(__torch__.torch.classes.partialtorch.MaskedPair self, int sections) -> __torch__.torch.classes.partialtorch.MaskedPair[1]
- func: partialtorch::hsplit.Tensor_int(Tensor self, int sections) -> __torch__.torch.classes.partialtorch.MaskedPair[1]
- func: partialtorch::hsplit.MaskedPair_array(__torch__.torch.classes.partialtorch.MaskedPair self, int[1] indices) -> __torch__.torch.classes.partialtorch.MaskedPair[1]
- func: partialtorch::hsplit.Tensor_array(Tensor self, int[1] indices) -> __torch__.torch.classes.partialtorch.MaskedPair[1]
- func: partialtorch::vsplit.MaskedPair_int(__torch__.torch.classes.partialtorch.MaskedPair self, int sections) -> __torch__.torch.classes.partialtorch.MaskedPair[1]
- func: partialtorch::vsplit.Tensor_int(Tensor self, int sections) -> __torch__.torch.classes.partialtorch.MaskedPair[1]
- func: partialtorch::vsplit.MaskedPair_array(__torch__.torch.classes.partialtorch.MaskedPair self, int[1] indices) -> __torch__.torch.classes.partialtorch.MaskedPair[1]
- func: partialtorch::vsplit.Tensor_array(Tensor self, int[1] indices) -> __torch__.torch.classes.partialtorch.MaskedPair[1]
- func: partialtorch::cat.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair[1] self, int dim) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::cat.Tensor(Tensor[1] self, int dim) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::row_stack.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair[1] self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::row_stack.Tensor(Tensor[1] self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::column_stack.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair[1] self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::column_stack.Tensor(Tensor[1] self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::hstack.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair[1] self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::hstack.Tensor(Tensor[1] self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::vstack.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair[1] self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::vstack.Tensor(Tensor[1] self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::atleast_1d.MaskedPair_Sequence(__torch__.torch.classes.partialtorch.MaskedPair[1] self) -> __torch__.torch.classes.partialtorch.MaskedPair[1]
- func: partialtorch::atleast_1d.Tensor_Sequence(Tensor[1] self) -> __torch__.torch.classes.partialtorch.MaskedPair[1]
- func: partialtorch::atleast_2d.MaskedPair_Sequence(__torch__.torch.classes.partialtorch.MaskedPair[1] self) -> __torch__.torch.classes.partialtorch.MaskedPair[1]
- func: partialtorch::atleast_2d.Tensor_Sequence(Tensor[1] self) -> __torch__.torch.classes.partialtorch.MaskedPair[1]
- func: partialtorch::atleast_3d.MaskedPair_Sequence(__torch__.torch.classes.partialtorch.MaskedPair[1] self) -> __torch__.torch.classes.partialtorch.MaskedPair[1]
- func: partialtorch::atleast_3d.Tensor_Sequence(Tensor[1] self) -> __torch__.torch.classes.partialtorch.MaskedPair[1]
- func: partialtorch::broadcast_tensors.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair[1] self) -> __torch__.torch.classes.partialtorch.MaskedPair[1]
- func: partialtorch::broadcast_tensors.Tensor(Tensor[1] self) -> __torch__.torch.classes.partialtorch.MaskedPair[1]
- func: partialtorch::meshgrid.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair[1] self) -> __torch__.torch.classes.partialtorch.MaskedPair[1]
- func: partialtorch::meshgrid.Tensor(Tensor[1] self) -> __torch__.torch.classes.partialtorch.MaskedPair[1]
- func: partialtorch::meshgrid.MaskedPair_indexing(__torch__.torch.classes.partialtorch.MaskedPair[1] self, *, str indexing) -> __torch__.torch.classes.partialtorch.MaskedPair[1]
- func: partialtorch::meshgrid.Tensor_indexing(Tensor[1] self, *, str indexing) -> __torch__.torch.classes.partialtorch.MaskedPair[1]
- func: partialtorch::max_pool1d.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair input, int[1] kernel_size, int[1] stride=[], int[1] padding=0, int[1] dilation=1, bool ceil_mode=False) -> __torch__.torch.classes.partial
  torch.MaskedPair
- func: partialtorch::max_pool1d.Tensor(Tensor input, int[1] kernel_size, int[1] stride=[], int[1] padding=0, int[1] dilation=1, bool ceil_mode=False) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::max_pool2d.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair input, int[1] kernel_size, int[2] stride=[], int[2] padding=0, int[2] dilation=1, bool ceil_mode=False) -> __torch__.torch.classes.partial
  torch.MaskedPair
- func: partialtorch::max_pool2d.Tensor(Tensor input, int[1] kernel_size, int[2] stride=[], int[2] padding=0, int[2] dilation=1, bool ceil_mode=False) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::max_pool3d.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair input, int[1] kernel_size, int[3] stride=[], int[3] padding=0, int[3] dilation=1, bool ceil_mode=False) -> __torch__.torch.classes.partial
  torch.MaskedPair
- func: partialtorch::max_pool3d.Tensor(Tensor input, int[1] kernel_size, int[3] stride=[], int[3] padding=0, int[3] dilation=1, bool ceil_mode=False) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::max_pool1d_with_indices.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair input, int[1] kernel_size, int[1] stride=[], int[1] padding=0, int[1] dilation=1, bool ceil_mode=False) -> (__torch__.torch.c
  lasses.partialtorch.MaskedPair, Tensor)
- func: partialtorch::max_pool1d_with_indices.Tensor(Tensor input, int[1] kernel_size, int[1] stride=[], int[1] padding=0, int[1] dilation=1, bool ceil_mode=False) -> (__torch__.torch.classes.partialtorch.MaskedPair, Tensor)
- func: partialtorch::max_pool2d_with_indices.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair input, int[1] kernel_size, int[2] stride=[], int[2] padding=0, int[2] dilation=1, bool ceil_mode=False) -> (__torch__.torch.c
  lasses.partialtorch.MaskedPair, Tensor)
- func: partialtorch::max_pool2d_with_indices.Tensor(Tensor input, int[1] kernel_size, int[2] stride=[], int[2] padding=0, int[2] dilation=1, bool ceil_mode=False) -> (__torch__.torch.classes.partialtorch.MaskedPair, Tensor)
- func: partialtorch::max_pool3d_with_indices.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair input, int[1] kernel_size, int[3] stride=[], int[3] padding=0, int[3] dilation=1, bool ceil_mode=False) -> (__torch__.torch.c
  lasses.partialtorch.MaskedPair, Tensor)
- func: partialtorch::max_pool3d_with_indices.Tensor(Tensor input, int[1] kernel_size, int[3] stride=[], int[3] padding=0, int[3] dilation=1, bool ceil_mode=False) -> (__torch__.torch.classes.partialtorch.MaskedPair, Tensor)
- func: partialtorch::fractional_max_pool2d.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair input, int[1] kernel_size, int[2] output_size, Tensor random_samples) -> (__torch__.torch.classes.partialtorch.MaskedPair, Tens
  or)
- func: partialtorch::fractional_max_pool2d.Tensor(Tensor input, int[1] kernel_size, int[2] output_size, Tensor random_samples) -> (__torch__.torch.classes.partialtorch.MaskedPair, Tensor)
- func: partialtorch::fractional_max_pool3d.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair input, int[1] kernel_size, int[3] output_size, Tensor random_samples) -> (__torch__.torch.classes.partialtorch.MaskedPair, Tens
  or)
- func: partialtorch::fractional_max_pool3d.Tensor(Tensor input, int[1] kernel_size, int[3] output_size, Tensor random_samples) -> (__torch__.torch.classes.partialtorch.MaskedPair, Tensor)
- func: partialtorch::rand_mask.float(Tensor input, float p, Scalar? mask_value=None, *, Generator? generator=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::rand_mask.Tensor(Tensor input, Tensor p, Scalar? mask_value=None, *, Generator? generator=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::rand_mask.MaskedPair_float(__torch__.torch.classes.partialtorch.MaskedPair input, float p, Scalar? mask_value=None, *, Generator? generator=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::rand_mask.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair input, Tensor p, Scalar? mask_value=None, *, Generator? generator=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::rand_mask_.float(Tensor input, float p, Scalar? mask_value=None, *, Generator? generator=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::rand_mask_.Tensor(Tensor input, Tensor p, Scalar? mask_value=None, *, Generator? generator=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::rand_mask_.MaskedPair_float(__torch__.torch.classes.partialtorch.MaskedPair input, float p, Scalar? mask_value=None, *, Generator? generator=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::rand_mask_.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair input, Tensor p, Scalar? mask_value=None, *, Generator? generator=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::all.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::all.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::all.MaskedPair_dim_IntList(__torch__.torch.classes.partialtorch.MaskedPair self, int[1]? dim, bool keepdim=False) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::all.Tensor_dim_IntList(Tensor self, int[1]? dim, bool keepdim=False) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::any.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::any.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::any.MaskedPair_dim_IntList(__torch__.torch.classes.partialtorch.MaskedPair self, int[1]? dim, bool keepdim=False) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::any.Tensor_dim_IntList(Tensor self, int[1]? dim, bool keepdim=False) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::sum.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, *, ScalarType? dtype=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::sum.Tensor(Tensor self, *, ScalarType? dtype=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::sum.MaskedPair_dim_IntList(__torch__.torch.classes.partialtorch.MaskedPair self, int[1]? dim, bool keepdim=False, *, ScalarType? dtype=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::sum.Tensor_dim_IntList(Tensor self, int[1]? dim, bool keepdim=False, *, ScalarType? dtype=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::nansum.MaskedPair_dim_IntList(__torch__.torch.classes.partialtorch.MaskedPair self, int[1]? dim, bool keepdim=False, *, ScalarType? dtype=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::nansum.Tensor_dim_IntList(Tensor self, int[1]? dim, bool keepdim=False, *, ScalarType? dtype=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::prod.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, *, ScalarType? dtype=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::prod.Tensor(Tensor self, *, ScalarType? dtype=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::prod.MaskedPair_dim_IntList(__torch__.torch.classes.partialtorch.MaskedPair self, int[1]? dim, bool keepdim=False, *, ScalarType? dtype=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::prod.Tensor_dim_IntList(Tensor self, int[1]? dim, bool keepdim=False, *, ScalarType? dtype=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::logsumexp.MaskedPair_dim_IntList(__torch__.torch.classes.partialtorch.MaskedPair self, int[1] dim, bool keepdim=False) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::logsumexp.Tensor_dim_IntList(Tensor self, int[1] dim, bool keepdim=False) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::softmax.MaskedPair_dim(__torch__.torch.classes.partialtorch.MaskedPair self, int dim, *, ScalarType? dtype=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::softmax.Tensor_dim(Tensor self, int dim, *, ScalarType? dtype=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::log_softmax.MaskedPair_dim(__torch__.torch.classes.partialtorch.MaskedPair self, int dim, *, ScalarType? dtype=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::log_softmax.Tensor_dim(Tensor self, int dim, *, ScalarType? dtype=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::cumsum.MaskedPair_dim(__torch__.torch.classes.partialtorch.MaskedPair self, int dim, *, ScalarType? dtype=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::cumsum.Tensor_dim(Tensor self, int dim, *, ScalarType? dtype=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::cumsum_.MaskedPair_dim(__torch__.torch.classes.partialtorch.MaskedPair self, int dim, *, ScalarType? dtype=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::cumsum_.Tensor_dim(Tensor self, int dim, *, ScalarType? dtype=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::cumprod.MaskedPair_dim(__torch__.torch.classes.partialtorch.MaskedPair self, int dim, *, ScalarType? dtype=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::cumprod.Tensor_dim(Tensor self, int dim, *, ScalarType? dtype=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::cumprod_.MaskedPair_dim(__torch__.torch.classes.partialtorch.MaskedPair self, int dim, *, ScalarType? dtype=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::cumprod_.Tensor_dim(Tensor self, int dim, *, ScalarType? dtype=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::trace.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::trace.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::mean.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, *, ScalarType? dtype=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::mean.Tensor(Tensor self, *, ScalarType? dtype=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::mean.MaskedPair_dim_IntList(__torch__.torch.classes.partialtorch.MaskedPair self, int[1]? dim, bool keepdim=False, *, ScalarType? dtype=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::mean.Tensor_dim_IntList(Tensor self, int[1]? dim, bool keepdim=False, *, ScalarType? dtype=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::nanmean.MaskedPair_dim_IntList(__torch__.torch.classes.partialtorch.MaskedPair self, int[1]? dim, bool keepdim=False, *, ScalarType? dtype=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::nanmean.Tensor_dim_IntList(Tensor self, int[1]? dim, bool keepdim=False, *, ScalarType? dtype=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::median.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::median.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::median.MaskedPair_dim(__torch__.torch.classes.partialtorch.MaskedPair self, int dim, bool keepdim=False) -> (__torch__.torch.classes.partialtorch.MaskedPair, Tensor)
- func: partialtorch::median.Tensor_dim(Tensor self, int dim, bool keepdim=False) -> (__torch__.torch.classes.partialtorch.MaskedPair, Tensor)
- func: partialtorch::nanmedian.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::nanmedian.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::nanmedian.MaskedPair_dim(__torch__.torch.classes.partialtorch.MaskedPair self, int dim, bool keepdim=False) -> (__torch__.torch.classes.partialtorch.MaskedPair, Tensor)
- func: partialtorch::nanmedian.Tensor_dim(Tensor self, int dim, bool keepdim=False) -> (__torch__.torch.classes.partialtorch.MaskedPair, Tensor)
- func: partialtorch::var.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, bool unbiased=True) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::var.Tensor(Tensor self, bool unbiased=True) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::var.MaskedPair_dim(__torch__.torch.classes.partialtorch.MaskedPair self, int[1]? dim, bool unbiased=True, bool keepdim=False) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::var.Tensor_dim(Tensor self, int[1]? dim, bool unbiased=True, bool keepdim=False) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::var.MaskedPair_correction(__torch__.torch.classes.partialtorch.MaskedPair self, int[1]? dim=None, Scalar? correction=None, bool keepdim=False) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::var.Tensor_correction(Tensor self, int[1]? dim=None, Scalar? correction=None, bool keepdim=False) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::std.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, bool unbiased=True) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::std.Tensor(Tensor self, bool unbiased=True) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::std.MaskedPair_dim(__torch__.torch.classes.partialtorch.MaskedPair self, int[1]? dim, bool unbiased=True, bool keepdim=False) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::std.Tensor_dim(Tensor self, int[1]? dim, bool unbiased=True, bool keepdim=False) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::std.MaskedPair_correction(__torch__.torch.classes.partialtorch.MaskedPair self, int[1]? dim=None, Scalar? correction=None, bool keepdim=False) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::std.Tensor_correction(Tensor self, int[1]? dim=None, Scalar? correction=None, bool keepdim=False) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::norm.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar? p=None, int[1] dim=[], bool keepdim=False, *, ScalarType? dtype=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::norm.Tensor(Tensor self, Scalar? p=None, int[1] dim=[], bool keepdim=False, *, ScalarType? dtype=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::linalg_norm.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar ord, int[1]? dim=None, bool keepdim=False, *, ScalarType? dtype=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::linalg_norm.Tensor(Tensor self, Scalar ord, int[1]? dim=None, bool keepdim=False, *, ScalarType? dtype=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::linalg_norm.MaskedPair_ord_str(__torch__.torch.classes.partialtorch.MaskedPair self, str ord="fro", int[1]? dim=None, bool keepdim=False, *, ScalarType? dtype=None) -> __torch__.torch.classes.partialtorch.Mas
  kedPair
- func: partialtorch::linalg_norm.Tensor_ord_str(Tensor self, str ord="fro", int[1]? dim=None, bool keepdim=False, *, ScalarType? dtype=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::linalg_vector_norm.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar ord=2, int[1]? dim=None, bool keepdim=False, *, ScalarType? dtype=None) -> __torch__.torch.classes.partialtorch.Maske
  dPair
- func: partialtorch::linalg_vector_norm.Tensor(Tensor self, Scalar ord=2, int[1]? dim=None, bool keepdim=False, *, ScalarType? dtype=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::linalg_matrix_norm.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar ord, int[1] dim=[-2, -1], bool keepdim=False, *, ScalarType? dtype=None) -> __torch__.torch.classes.partialtorch.Mask
  edPair
- func: partialtorch::linalg_matrix_norm.Tensor(Tensor self, Scalar ord, int[1] dim=[-2, -1], bool keepdim=False, *, ScalarType? dtype=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::linalg_matrix_norm.MaskedPair_str_ord(__torch__.torch.classes.partialtorch.MaskedPair self, str ord="fro", int[1] dim=[-2, -1], bool keepdim=False, *, ScalarType? dtype=None) -> __torch__.torch.classes.partia
  ltorch.MaskedPair
- func: partialtorch::linalg_matrix_norm.Tensor_str_ord(Tensor self, str ord="fro", int[1] dim=[-2, -1], bool keepdim=False, *, ScalarType? dtype=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::min.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::min.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::min.MaskedPair_dim(__torch__.torch.classes.partialtorch.MaskedPair self, int dim, bool keepdim=False) -> (__torch__.torch.classes.partialtorch.MaskedPair, Tensor)
- func: partialtorch::min.Tensor_dim(Tensor self, int dim, bool keepdim=False) -> (__torch__.torch.classes.partialtorch.MaskedPair, Tensor)
- func: partialtorch::max.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::max.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::max.MaskedPair_dim(__torch__.torch.classes.partialtorch.MaskedPair self, int dim, bool keepdim=False) -> (__torch__.torch.classes.partialtorch.MaskedPair, Tensor)
- func: partialtorch::max.Tensor_dim(Tensor self, int dim, bool keepdim=False) -> (__torch__.torch.classes.partialtorch.MaskedPair, Tensor)
- func: partialtorch::amin.MaskedPair_dim_IntList(__torch__.torch.classes.partialtorch.MaskedPair self, int[1] dim=[], bool keepdim=False) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::amin.Tensor_dim_IntList(Tensor self, int[1] dim=[], bool keepdim=False) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::amax.MaskedPair_dim_IntList(__torch__.torch.classes.partialtorch.MaskedPair self, int[1] dim=[], bool keepdim=False) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::amax.Tensor_dim_IntList(Tensor self, int[1] dim=[], bool keepdim=False) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::argmin.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, int? dim=None, bool keepdim=False) -> Tensor
- func: partialtorch::argmin.Tensor(Tensor self, int? dim=None, bool keepdim=False) -> Tensor
- func: partialtorch::argmax.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, int? dim=None, bool keepdim=False) -> Tensor
- func: partialtorch::argmax.Tensor(Tensor self, int? dim=None, bool keepdim=False) -> Tensor
- func: partialtorch::cummin.MaskedPair_dim(__torch__.torch.classes.partialtorch.MaskedPair self, int dim) -> (__torch__.torch.classes.partialtorch.MaskedPair, Tensor)
- func: partialtorch::cummin.Tensor_dim(Tensor self, int dim) -> (__torch__.torch.classes.partialtorch.MaskedPair, Tensor)
- func: partialtorch::cummax.MaskedPair_dim(__torch__.torch.classes.partialtorch.MaskedPair self, int dim) -> (__torch__.torch.classes.partialtorch.MaskedPair, Tensor)
- func: partialtorch::cummax.Tensor_dim(Tensor self, int dim) -> (__torch__.torch.classes.partialtorch.MaskedPair, Tensor)
- func: partialtorch::softmin.MaskedPair_dim(__torch__.torch.classes.partialtorch.MaskedPair self, int dim, *, ScalarType? dtype=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::softmin.Tensor_dim(Tensor self, int dim, *, ScalarType? dtype=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::normalize.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar? p=2, int dim=1, float eps=1e-12) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::normalize.Tensor(Tensor self, Scalar? p=2, int dim=1, float eps=1e-12) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::sum.MaskedPair_scaled(__torch__.torch.classes.partialtorch.MaskedPair self, *, ScalarType? dtype=None, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::sum.Tensor_scaled(Tensor self, *, ScalarType? dtype=None, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::sum.MaskedPair_dim_IntList_scaled(__torch__.torch.classes.partialtorch.MaskedPair self, int[1]? dim, bool keepdim=False, *, ScalarType? dtype=None, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedP
  air
- func: partialtorch::sum.Tensor_dim_IntList_scaled(Tensor self, int[1]? dim, bool keepdim=False, *, ScalarType? dtype=None, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::nansum.MaskedPair_dim_IntList_scaled(__torch__.torch.classes.partialtorch.MaskedPair self, int[1]? dim, bool keepdim=False, *, ScalarType? dtype=None, bool scaled) -> __torch__.torch.classes.partialtorch.Mask
  edPair
- func: partialtorch::nansum.Tensor_dim_IntList_scaled(Tensor self, int[1]? dim, bool keepdim=False, *, ScalarType? dtype=None, bool scaled) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::trace.MaskedPair_scaled(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::trace.Tensor_scaled(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::addcmul.MP_MP_MP(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair tensor1, __torch__.torch.classes.partialtorch.MaskedPair tensor2, *, Scalar alpha=1) -> _
  _torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::addcmul.MP_MP_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair tensor1, Tensor tensor2, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.M
  askedPair
- func: partialtorch::addcmul.MP_Tensor_MP(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor tensor1, __torch__.torch.classes.partialtorch.MaskedPair tensor2, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.M
  askedPair
- func: partialtorch::addcmul.MP_Tensor_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor tensor1, Tensor tensor2, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::addcmul.Tensor_MP_MP(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair tensor1, __torch__.torch.classes.partialtorch.MaskedPair tensor2, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.M
  askedPair
- func: partialtorch::addcmul.Tensor_MP_Tensor(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair tensor1, Tensor tensor2, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::addcmul.Tensor_Tensor_MP(Tensor self, Tensor tensor1, __torch__.torch.classes.partialtorch.MaskedPair tensor2, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::addcmul.Tensor_Tensor_Tensor(Tensor self, Tensor tensor1, Tensor tensor2, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::addcmul_.MP_MP_MP(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair tensor1, __torch__.torch.classes.partialtorch.MaskedPair tensor2, *, Scalar alpha=1) ->
  __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::addcmul_.MP_MP_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair tensor1, Tensor tensor2, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.
  MaskedPair
- func: partialtorch::addcmul_.MP_Tensor_MP(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor tensor1, __torch__.torch.classes.partialtorch.MaskedPair tensor2, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.
  MaskedPair
- func: partialtorch::addcmul_.MP_Tensor_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor tensor1, Tensor tensor2, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::addcmul_.Tensor_MP_MP(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair tensor1, __torch__.torch.classes.partialtorch.MaskedPair tensor2, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.
  MaskedPair
- func: partialtorch::addcmul_.Tensor_MP_Tensor(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair tensor1, Tensor tensor2, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::addcmul_.Tensor_Tensor_MP(Tensor self, Tensor tensor1, __torch__.torch.classes.partialtorch.MaskedPair tensor2, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::addcmul_.Tensor_Tensor_Tensor(Tensor self, Tensor tensor1, Tensor tensor2, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::addcdiv.MP_MP_MP(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair tensor1, __torch__.torch.classes.partialtorch.MaskedPair tensor2, *, Scalar alpha=1) -> _
  _torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::addcdiv.MP_MP_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair tensor1, Tensor tensor2, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.M
  askedPair
- func: partialtorch::addcdiv.MP_Tensor_MP(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor tensor1, __torch__.torch.classes.partialtorch.MaskedPair tensor2, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.M
  askedPair
- func: partialtorch::addcdiv.MP_Tensor_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor tensor1, Tensor tensor2, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::addcdiv.Tensor_MP_MP(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair tensor1, __torch__.torch.classes.partialtorch.MaskedPair tensor2, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.M
  askedPair
- func: partialtorch::addcdiv.Tensor_MP_Tensor(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair tensor1, Tensor tensor2, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::addcdiv.Tensor_Tensor_MP(Tensor self, Tensor tensor1, __torch__.torch.classes.partialtorch.MaskedPair tensor2, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::addcdiv.Tensor_Tensor_Tensor(Tensor self, Tensor tensor1, Tensor tensor2, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::addcdiv_.MP_MP_MP(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair tensor1, __torch__.torch.classes.partialtorch.MaskedPair tensor2, *, Scalar alpha=1) ->
  __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::addcdiv_.MP_MP_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair tensor1, Tensor tensor2, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.
  MaskedPair
- func: partialtorch::addcdiv_.MP_Tensor_MP(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor tensor1, __torch__.torch.classes.partialtorch.MaskedPair tensor2, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.
  MaskedPair
- func: partialtorch::addcdiv_.MP_Tensor_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor tensor1, Tensor tensor2, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::addcdiv_.Tensor_MP_MP(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair tensor1, __torch__.torch.classes.partialtorch.MaskedPair tensor2, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.
  MaskedPair
- func: partialtorch::addcdiv_.Tensor_MP_Tensor(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair tensor1, Tensor tensor2, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::addcdiv_.Tensor_Tensor_MP(Tensor self, Tensor tensor1, __torch__.torch.classes.partialtorch.MaskedPair tensor2, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::addcdiv_.Tensor_Tensor_Tensor(Tensor self, Tensor tensor1, Tensor tensor2, *, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::identity.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::identity.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::fill_masked.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar value) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::fill_masked.Tensor_Scalar(Tensor self, Scalar value) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::fill_masked_.MaskedPair_Scalar(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar value) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::fill_masked_.Tensor_Scalar(Tensor self, Scalar value) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::fill_masked.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor value) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::fill_masked.Tensor_Tensor(Tensor self, Tensor value) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::fill_masked_.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor value) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::fill_masked_.Tensor_Tensor(Tensor self, Tensor value) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::to_tensor.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar value) -> Tensor
- func: partialtorch::index_non_masked.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> Tensor
- func: partialtorch::index_non_masked.Tensor(Tensor self) -> Tensor
- func: partialtorch::abs.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::abs.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::abs_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::abs_.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::absolute.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::absolute.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::absolute_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::absolute_.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::acos.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::acos.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::acos_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::acos_.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::arccos.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::arccos.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::arccos_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::arccos_.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::acosh.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::acosh.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::acosh_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::acosh_.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::arccosh.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::arccosh.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::arccosh_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::arccosh_.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::alias.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::alias.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::angle.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::angle.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::asin.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::asin.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::asin_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::asin_.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::arcsin.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::arcsin.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::arcsin_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::arcsin_.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::asinh.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::asinh.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::asinh_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::asinh_.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::arcsinh.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::arcsinh.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::arcsinh_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::arcsinh_.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::atan.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::atan.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::atan_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::atan_.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::arctan.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::arctan.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::arctan_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::arctan_.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::atanh.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::atanh.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::atanh_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::atanh_.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::arctanh.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::arctanh.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::arctanh_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::arctanh_.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_not.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_not.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_not_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::bitwise_not_.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::ceil.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::ceil.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::ceil_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::ceil_.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::clamp.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar? min=None, Scalar? max=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::clamp.Tensor(Tensor self, Scalar? min=None, Scalar? max=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::clamp_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar? min=None, Scalar? max=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::clamp_.Tensor(Tensor self, Scalar? min=None, Scalar? max=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::clamp.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor? min=None, Tensor? max=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::clamp.Tensor_Tensor(Tensor self, Tensor? min=None, Tensor? max=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::clamp_.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor? min=None, Tensor? max=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::clamp_.Tensor_Tensor(Tensor self, Tensor? min=None, Tensor? max=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::clip.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar? min=None, Scalar? max=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::clip.Tensor(Tensor self, Scalar? min=None, Scalar? max=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::clip_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar? min=None, Scalar? max=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::clip_.Tensor(Tensor self, Scalar? min=None, Scalar? max=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::clip.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor? min=None, Tensor? max=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::clip.Tensor_Tensor(Tensor self, Tensor? min=None, Tensor? max=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::clip_.MaskedPair_Tensor(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor? min=None, Tensor? max=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::clip_.Tensor_Tensor(Tensor self, Tensor? min=None, Tensor? max=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::conj_physical.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::conj_physical.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::conj_physical_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::conj_physical_.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::cos.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::cos.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::cos_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::cos_.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::cosh.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::cosh.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::cosh_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::cosh_.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::deg2rad.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::deg2rad.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::deg2rad_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::deg2rad_.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::rad2deg.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::rad2deg.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::rad2deg_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::rad2deg_.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::dropout.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, float p, bool train) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::dropout.Tensor(Tensor self, float p, bool train) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::dropout_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, float p, bool train) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::dropout_.Tensor(Tensor self, float p, bool train) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::feature_dropout.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, float p, bool train) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::feature_dropout.Tensor(Tensor self, float p, bool train) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::feature_dropout_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, float p, bool train) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::feature_dropout_.Tensor(Tensor self, float p, bool train) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::alpha_dropout.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, float p, bool train) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::alpha_dropout.Tensor(Tensor self, float p, bool train) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::alpha_dropout_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, float p, bool train) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::alpha_dropout_.Tensor(Tensor self, float p, bool train) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::feature_alpha_dropout.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, float p, bool train) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::feature_alpha_dropout.Tensor(Tensor self, float p, bool train) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::feature_alpha_dropout_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, float p, bool train) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::feature_alpha_dropout_.Tensor(Tensor self, float p, bool train) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::erf.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::erf.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::erf_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::erf_.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::erfc.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::erfc.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::erfc_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::erfc_.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::erfinv.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::erfinv.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::erfinv_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::erfinv_.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::exp.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::exp.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::exp_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::exp_.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::exp2.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::exp2.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::exp2_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::exp2_.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::expm1.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::expm1.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::expm1_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::expm1_.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::fix.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::fix.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::fix_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::fix_.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::floor.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::floor.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::floor_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::floor_.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::frac.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::frac.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::frac_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::frac_.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::lgamma.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::lgamma.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::lgamma_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::lgamma_.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::digamma.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::digamma.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::digamma_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::digamma_.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::polygamma.MaskedPair(int n, __torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::polygamma.Tensor(int n, Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::polygamma_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, int n) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::polygamma_.Tensor(Tensor self, int n) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::log.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::log.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::log_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::log_.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::log10.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::log10.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::log10_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::log10_.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::log1p.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::log1p.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::log1p_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::log1p_.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::log2.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::log2.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::log2_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::log2_.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::logit.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, float? eps=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::logit.Tensor(Tensor self, float? eps=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::logit_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, float? eps=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::logit_.Tensor(Tensor self, float? eps=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::i0.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::i0.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::i0_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::i0_.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::isnan.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::isnan.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::isreal.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::isreal.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::isfinite.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::isfinite.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::isinf.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::isinf.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::isposinf.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::isposinf.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::isneginf.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::isneginf.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::matrix_exp.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::matrix_exp.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::matrix_power.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, int n) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::matrix_power.Tensor(Tensor self, int n) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::nan_to_num.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, float? nan=None, float? posinf=None, float? neginf=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::nan_to_num.Tensor(Tensor self, float? nan=None, float? posinf=None, float? neginf=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::nan_to_num_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, float? nan=None, float? posinf=None, float? neginf=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::nan_to_num_.Tensor(Tensor self, float? nan=None, float? posinf=None, float? neginf=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::neg.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::neg.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::neg_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::neg_.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::negative.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::negative.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::negative_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::negative_.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::positive.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::positive.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::reciprocal.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::reciprocal.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::reciprocal_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::reciprocal_.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::round.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::round.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::round_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::round_.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::rsqrt.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::rsqrt.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::rsqrt_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::rsqrt_.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::sign.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::sign.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::sign_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::sign_.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::sgn.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::sgn.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::sgn_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::sgn_.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::signbit.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::signbit.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::sin.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::sin.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::sin_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::sin_.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::sinc.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::sinc.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::sinc_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::sinc_.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::sinh.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::sinh.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::sinh_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::sinh_.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::sqrt.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::sqrt.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::sqrt_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::sqrt_.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::square.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::square.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::square_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::square_.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::tan.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::tan.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::tan_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::tan_.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::tanh.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::tanh.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::tanh_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::tanh_.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::hardtanh.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar min_val=-1, Scalar max_val=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::hardtanh.Tensor(Tensor self, Scalar min_val=-1, Scalar max_val=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::hardtanh_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar min_val=-1, Scalar max_val=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::hardtanh_.Tensor(Tensor self, Scalar min_val=-1, Scalar max_val=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::threshold.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar threshold, Scalar value) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::threshold.Tensor(Tensor self, Scalar threshold, Scalar value) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::threshold_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar threshold, Scalar value) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::threshold_.Tensor(Tensor self, Scalar threshold, Scalar value) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::trunc.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::trunc.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::trunc_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::trunc_.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::relu.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::relu.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::relu_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::relu_.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::relu6.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::relu6.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::relu6_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::relu6_.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::glu.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, int dim=-1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::glu.Tensor(Tensor self, int dim=-1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::elu.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar alpha=1, Scalar scale=1, Scalar input_scale=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::elu.Tensor(Tensor self, Scalar alpha=1, Scalar scale=1, Scalar input_scale=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::elu_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar alpha=1, Scalar scale=1, Scalar input_scale=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::elu_.Tensor(Tensor self, Scalar alpha=1, Scalar scale=1, Scalar input_scale=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::selu.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::selu.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::selu_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::selu_.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::celu.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::celu.Tensor(Tensor self, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::celu_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::celu_.Tensor(Tensor self, Scalar alpha=1) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::leaky_relu.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar negative_slope=0.01) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::leaky_relu.Tensor(Tensor self, Scalar negative_slope=0.01) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::leaky_relu_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar negative_slope=0.01) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::leaky_relu_.Tensor(Tensor self, Scalar negative_slope=0.01) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::prelu.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor weight) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::prelu.Tensor(Tensor self, Tensor weight) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::rrelu.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar lower=0.125, Scalar upper=0.3333333333333333, bool training=False, Generator? generator=None) -> __torch__.torch.classes.partialto
  rch.MaskedPair
- func: partialtorch::rrelu.Tensor(Tensor self, Scalar lower=0.125, Scalar upper=0.3333333333333333, bool training=False, Generator? generator=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::rrelu_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar lower=0.125, Scalar upper=0.3333333333333333, bool training=False, Generator? generator=None) -> __torch__.torch.classes.partialt
  orch.MaskedPair
- func: partialtorch::rrelu_.Tensor(Tensor self, Scalar lower=0.125, Scalar upper=0.3333333333333333, bool training=False, Generator? generator=None) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::gelu.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, str approximate='none') -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::gelu.Tensor(Tensor self, str approximate='none') -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::gelu_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, str approximate='none') -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::gelu_.Tensor(Tensor self, str approximate='none') -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::hardshrink.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar lambd=0.5) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::hardshrink.Tensor(Tensor self, Scalar lambd=0.5) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::softshrink.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar lambd=0.5) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::softshrink.Tensor(Tensor self, Scalar lambd=0.5) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::softplus.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, Scalar beta=1, Scalar threshold=20) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::softplus.Tensor(Tensor self, Scalar beta=1, Scalar threshold=20) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::sigmoid.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::sigmoid.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::sigmoid_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::sigmoid_.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::hardsigmoid.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::hardsigmoid.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::hardsigmoid_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::hardsigmoid_.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::log_sigmoid.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::log_sigmoid.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::silu.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::silu.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::silu_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::silu_.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::mish.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::mish.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::mish_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::mish_.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::hardswish.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::hardswish.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::hardswish_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::hardswish_.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::dropout1d.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, float p, bool train) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::dropout1d.Tensor(Tensor self, float p, bool train) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::dropout1d_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, float p, bool train) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::dropout1d_.Tensor(Tensor self, float p, bool train) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::dropout2d.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, float p, bool train) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::dropout2d.Tensor(Tensor self, float p, bool train) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::dropout2d_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, float p, bool train) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::dropout2d_.Tensor(Tensor self, float p, bool train) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::dropout3d.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, float p, bool train) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::dropout3d.Tensor(Tensor self, float p, bool train) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::dropout3d_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, float p, bool train) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::dropout3d_.Tensor(Tensor self, float p, bool train) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::logsigmoid.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::logsigmoid.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::softsign.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::softsign.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::tanhshrink.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::tanhshrink.Tensor(Tensor self) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::dim.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> int
- func: partialtorch::dim.Tensor(Tensor self) -> int
- func: partialtorch::dense_dim.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self) -> int
- func: partialtorch::dense_dim.Tensor(Tensor self) -> int
- func: partialtorch::size.MaskedPair_int(__torch__.torch.classes.partialtorch.MaskedPair self, int dim) -> int
- func: partialtorch::size.Tensor_int(Tensor self, int dim) -> int
- func: partialtorch::requires_grad_.MaskedPair(__torch__.torch.classes.partialtorch.MaskedPair self, bool requires_grad=True) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::requires_grad_.Tensor(Tensor self, bool requires_grad=True) -> __torch__.torch.classes.partialtorch.MaskedPair
- func: partialtorch::_backward.MaskedPair_MaskedPairList(__torch__.torch.classes.partialtorch.MaskedPair self, __torch__.torch.classes.partialtorch.MaskedPair[1] inputs, Tensor? gradient=None, bool? retain_graph=None, bool create
  _graph=False) -> ()
- func: partialtorch::_backward.MaskedPair_TensorList(__torch__.torch.classes.partialtorch.MaskedPair self, Tensor[1] inputs, Tensor? gradient=None, bool? retain_graph=None, bool create_graph=False) -> ()
- func: partialtorch::_backward.Tensor_MaskedPairList(Tensor self, __torch__.torch.classes.partialtorch.MaskedPair[1] inputs, Tensor? gradient=None, bool? retain_graph=None, bool create_graph=False) -> ()
- func: partialtorch::_backward.Tensor_TensorList(Tensor self, Tensor[1] inputs, Tensor? gradient=None, bool? retain_graph=None, bool create_graph=False) -> ()
